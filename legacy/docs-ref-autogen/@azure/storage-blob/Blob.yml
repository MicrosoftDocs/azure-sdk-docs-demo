### YamlMime:TSType
name: Blob
uid: '@azure/storage-blob.Blob'
package: '@azure/storage-blob'
summary: Class representing a Blob.
fullName: Blob
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: Blob(StorageClientContext)
    uid: '@azure/storage-blob.Blob.constructor'
    package: '@azure/storage-blob'
    summary: Create a Blob.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new Blob(client: StorageClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/storage-blob.StorageClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      abortCopyFromURL(string, BlobAbortCopyFromURLOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.abortCopyFromURL_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function abortCopyFromURL(copyId: string, options:
        BlobAbortCopyFromURLOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: copyId
          type: string
          description: >-
            The copy identifier provided in the x-ms-copy-id header of the
            original Copy Blob

            operation.
        - id: options
          type: >-
            <xref uid="@azure/storage-blob.BlobAbortCopyFromURLOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'abortCopyFromURL(string, Models.BlobAbortCopyFromURLOptionalParams)'
    uid: '@azure/storage-blob.Blob.abortCopyFromURL'
    package: '@azure/storage-blob'
    summary: >-
      The Abort Copy From URL operation aborts a pending Copy From URL
      operation, and leaves a

      destination blob with zero length and full metadata.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function abortCopyFromURL(copyId: string, options?:
        Models.BlobAbortCopyFromURLOptionalParams):
        Promise<Models.BlobAbortCopyFromURLResponse>
      parameters:
        - id: copyId
          type: string
          description: >-
            The copy identifier provided in the x-ms-copy-id header of the
            original Copy Blob

            operation.
        - id: options
          type: <xref uid="Models.BlobAbortCopyFromURLOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobAbortCopyFromURLResponse>
        type: Promise&lt;<xref uid="Models.BlobAbortCopyFromURLResponse" />&gt;
  - name: 'abortCopyFromURL(string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.abortCopyFromURL_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function abortCopyFromURL(copyId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: copyId
          type: string
          description: >-
            The copy identifier provided in the x-ms-copy-id header of the
            original Copy Blob

            operation.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'acquireLease(BlobAcquireLeaseOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.acquireLease_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function acquireLease(options: BlobAcquireLeaseOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobAcquireLeaseOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: acquireLease(Models.BlobAcquireLeaseOptionalParams)
    uid: '@azure/storage-blob.Blob.acquireLease'
    package: '@azure/storage-blob'
    summary: >-
      [Update] The Lease Blob operation establishes and manages a lock on a blob
      for write and delete

      operations
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function acquireLease(options?: Models.BlobAcquireLeaseOptionalParams):
        Promise<Models.BlobAcquireLeaseResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobAcquireLeaseOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobAcquireLeaseResponse>
        type: Promise&lt;<xref uid="Models.BlobAcquireLeaseResponse" />&gt;
  - name: acquireLease(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.acquireLease_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function acquireLease(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'breakLease(BlobBreakLeaseOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.breakLease_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function breakLease(options: BlobBreakLeaseOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobBreakLeaseOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: breakLease(Models.BlobBreakLeaseOptionalParams)
    uid: '@azure/storage-blob.Blob.breakLease'
    package: '@azure/storage-blob'
    summary: >-
      [Update] The Lease Blob operation establishes and manages a lock on a blob
      for write and delete

      operations
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function breakLease(options?: Models.BlobBreakLeaseOptionalParams):
        Promise<Models.BlobBreakLeaseResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobBreakLeaseOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobBreakLeaseResponse>
        type: Promise&lt;<xref uid="Models.BlobBreakLeaseResponse" />&gt;
  - name: breakLease(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.breakLease_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function breakLease(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      changeLease(string, string, BlobChangeLeaseOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.changeLease_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, options:
        BlobChangeLeaseOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: proposedLeaseId
          type: string
          description: >-
            Proposed lease ID, in a GUID string format. The Blob service returns
            400

            (Invalid request) if the proposed lease ID is not in the correct
            format. See Guid Constructor

            (String) for a list of valid GUID string formats.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobChangeLeaseOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'changeLease(string, string, Models.BlobChangeLeaseOptionalParams)'
    uid: '@azure/storage-blob.Blob.changeLease'
    package: '@azure/storage-blob'
    summary: >-
      [Update] The Lease Blob operation establishes and manages a lock on a blob
      for write and delete

      operations
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, options?:
        Models.BlobChangeLeaseOptionalParams):
        Promise<Models.BlobChangeLeaseResponse>
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: proposedLeaseId
          type: string
          description: >-
            Proposed lease ID, in a GUID string format. The Blob service returns
            400

            (Invalid request) if the proposed lease ID is not in the correct
            format. See Guid Constructor

            (String) for a list of valid GUID string formats.
        - id: options
          type: <xref uid="Models.BlobChangeLeaseOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobChangeLeaseResponse>
        type: Promise&lt;<xref uid="Models.BlobChangeLeaseResponse" />&gt;
  - name: 'changeLease(string, string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.changeLease_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: proposedLeaseId
          type: string
          description: >-
            Proposed lease ID, in a GUID string format. The Blob service returns
            400

            (Invalid request) if the proposed lease ID is not in the correct
            format. See Guid Constructor

            (String) for a list of valid GUID string formats.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'copyFromURL(string, BlobCopyFromURLOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.copyFromURL_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function copyFromURL(copySource: string, options:
        BlobCopyFromURLOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: copySource
          type: string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobCopyFromURLOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'copyFromURL(string, Models.BlobCopyFromURLOptionalParams)'
    uid: '@azure/storage-blob.Blob.copyFromURL'
    package: '@azure/storage-blob'
    summary: >-
      The Copy From URL operation copies a blob or an internet resource to a new
      blob. It will not

      return a response until the copy is complete.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function copyFromURL(copySource: string, options?:
        Models.BlobCopyFromURLOptionalParams):
        Promise<Models.BlobCopyFromURLResponse>
      parameters:
        - id: copySource
          type: string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: options
          type: <xref uid="Models.BlobCopyFromURLOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobCopyFromURLResponse>
        type: Promise&lt;<xref uid="Models.BlobCopyFromURLResponse" />&gt;
  - name: 'copyFromURL(string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.copyFromURL_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function copyFromURL(copySource: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: copySource
          type: string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'createSnapshot(BlobCreateSnapshotOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.createSnapshot_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createSnapshot(options: BlobCreateSnapshotOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobCreateSnapshotOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: createSnapshot(Models.BlobCreateSnapshotOptionalParams)
    uid: '@azure/storage-blob.Blob.createSnapshot'
    package: '@azure/storage-blob'
    summary: The Create Snapshot operation creates a read-only snapshot of a blob
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createSnapshot(options?:
        Models.BlobCreateSnapshotOptionalParams):
        Promise<Models.BlobCreateSnapshotResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobCreateSnapshotOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobCreateSnapshotResponse>
        type: Promise&lt;<xref uid="Models.BlobCreateSnapshotResponse" />&gt;
  - name: createSnapshot(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.createSnapshot_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createSnapshot(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(BlobDeleteMethodOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.deleteMethod_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(options: BlobDeleteMethodOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDeleteMethodOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(Models.BlobDeleteMethodOptionalParams)
    uid: '@azure/storage-blob.Blob.deleteMethod'
    package: '@azure/storage-blob'
    summary: >-
      If the storage account's soft delete feature is disabled then, when a blob
      is deleted, it is

      permanently removed from the storage account. If the storage account's
      soft delete feature is

      enabled, then, when a blob is deleted, it is marked for deletion and
      becomes inaccessible

      immediately. However, the blob service retains the blob or snapshot for
      the number of days

      specified by the DeleteRetentionPolicy section of [Storage service
      properties]

      (Set-Blob-Service-Properties.md). After the specified number of days has
      passed, the blob's data

      is permanently removed from the storage account. Note that you continue to
      be charged for the

      soft-deleted blob's storage until it is permanently removed. Use the List
      Blobs API and specify

      the "include=deleted" query parameter to discover which blobs and
      snapshots have been soft

      deleted. You can then use the Undelete Blob API to restore a soft-deleted
      blob. All other

      operations on a soft-deleted blob or snapshot causes the service to return
      an HTTP status code

      of 404 (ResourceNotFound).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(options?: Models.BlobDeleteMethodOptionalParams):
        Promise<Models.BlobDeleteResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobDeleteMethodOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobDeleteResponse>
        type: Promise&lt;<xref uid="Models.BlobDeleteResponse" />&gt;
  - name: deleteMethod(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.deleteMethod_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'download(BlobDownloadOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.download_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function download(options: BlobDownloadOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDownloadOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: download(Models.BlobDownloadOptionalParams)
    uid: '@azure/storage-blob.Blob.download'
    package: '@azure/storage-blob'
    summary: >-
      The Download operation reads or downloads a blob from the system,
      including its metadata and

      properties. You can also call Download to read a snapshot.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function download(options?: Models.BlobDownloadOptionalParams):
        Promise<Models.BlobDownloadResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobDownloadOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobDownloadResponse>
        type: Promise&lt;<xref uid="Models.BlobDownloadResponse" />&gt;
  - name: download(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.download_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function download(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      getAccessControl(BlobGetAccessControlOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.getAccessControl_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccessControl(options: BlobGetAccessControlOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-blob.BlobGetAccessControlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getAccessControl(Models.BlobGetAccessControlOptionalParams)
    uid: '@azure/storage-blob.Blob.getAccessControl'
    package: '@azure/storage-blob'
    summary: 'Get the owner, group, permissions, or access control list for a blob.'
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccessControl(options?:
        Models.BlobGetAccessControlOptionalParams):
        Promise<Models.BlobGetAccessControlResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobGetAccessControlOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobGetAccessControlResponse>
        type: Promise&lt;<xref uid="Models.BlobGetAccessControlResponse" />&gt;
  - name: getAccessControl(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.getAccessControl_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAccessControl(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getAccountInfo(msRest.RequestOptionsBase)
    uid: '@azure/storage-blob.Blob.getAccountInfo'
    package: '@azure/storage-blob'
    summary: Returns the sku name and account kind
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccountInfo(options?: msRest.RequestOptionsBase):
        Promise<Models.BlobGetAccountInfoResponse>
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.BlobGetAccountInfoResponse>
        type: Promise&lt;<xref uid="Models.BlobGetAccountInfoResponse" />&gt;
  - name: 'getAccountInfo(RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.getAccountInfo_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccountInfo(options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getAccountInfo(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.getAccountInfo_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAccountInfo(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getProperties(BlobGetPropertiesOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.getProperties_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options: BlobGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobGetPropertiesOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getProperties(Models.BlobGetPropertiesOptionalParams)
    uid: '@azure/storage-blob.Blob.getProperties'
    package: '@azure/storage-blob'
    summary: >-
      The Get Properties operation returns all user-defined metadata, standard
      HTTP properties, and

      system properties for the blob. It does not return the content of the
      blob.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options?:
        Models.BlobGetPropertiesOptionalParams):
        Promise<Models.BlobGetPropertiesResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobGetPropertiesOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobGetPropertiesResponse>
        type: Promise&lt;<xref uid="Models.BlobGetPropertiesResponse" />&gt;
  - name: getProperties(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.getProperties_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      releaseLease(string, BlobReleaseLeaseOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.releaseLease_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function releaseLease(leaseId: string, options:
        BlobReleaseLeaseOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobReleaseLeaseOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'releaseLease(string, Models.BlobReleaseLeaseOptionalParams)'
    uid: '@azure/storage-blob.Blob.releaseLease'
    package: '@azure/storage-blob'
    summary: >-
      [Update] The Lease Blob operation establishes and manages a lock on a blob
      for write and delete

      operations
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function releaseLease(leaseId: string, options?:
        Models.BlobReleaseLeaseOptionalParams):
        Promise<Models.BlobReleaseLeaseResponse>
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: options
          type: <xref uid="Models.BlobReleaseLeaseOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobReleaseLeaseResponse>
        type: Promise&lt;<xref uid="Models.BlobReleaseLeaseResponse" />&gt;
  - name: 'releaseLease(string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.releaseLease_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function releaseLease(leaseId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'rename(string, BlobRenameOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.rename_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function rename(renameSource: string, options: BlobRenameOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: renameSource
          type: string
          description: >-
            The file or directory to be renamed. The value must have the
            following

            format: "/{filesysystem}/{path}".  If "x-ms-properties" is
            specified, the properties will

            overwrite the existing properties; otherwise, the existing
            properties will be preserved.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobRenameOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'rename(string, Models.BlobRenameOptionalParams)'
    uid: '@azure/storage-blob.Blob.rename'
    package: '@azure/storage-blob'
    summary: >-
      Rename a blob/file.  By default, the destination is overwritten and if the
      destination already

      exists and has a lease the lease is broken.  This operation supports
      conditional HTTP requests.

      For more information, see [Specifying Conditional Headers for Blob Service

      Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).

      To fail if the destination already exists, use a conditional request with
      If-None-Match: "*".
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function rename(renameSource: string, options?:
        Models.BlobRenameOptionalParams): Promise<Models.BlobRenameResponse>
      parameters:
        - id: renameSource
          type: string
          description: >-
            The file or directory to be renamed. The value must have the
            following

            format: "/{filesysystem}/{path}".  If "x-ms-properties" is
            specified, the properties will

            overwrite the existing properties; otherwise, the existing
            properties will be preserved.
        - id: options
          type: <xref uid="Models.BlobRenameOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobRenameResponse>
        type: Promise&lt;<xref uid="Models.BlobRenameResponse" />&gt;
  - name: 'rename(string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.rename_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function rename(renameSource: string, callback: ServiceCallback<void>)'
      parameters:
        - id: renameSource
          type: string
          description: >-
            The file or directory to be renamed. The value must have the
            following

            format: "/{filesysystem}/{path}".  If "x-ms-properties" is
            specified, the properties will

            overwrite the existing properties; otherwise, the existing
            properties will be preserved.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'renewLease(string, BlobRenewLeaseOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.renewLease_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function renewLease(leaseId: string, options:
        BlobRenewLeaseOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobRenewLeaseOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'renewLease(string, Models.BlobRenewLeaseOptionalParams)'
    uid: '@azure/storage-blob.Blob.renewLease'
    package: '@azure/storage-blob'
    summary: >-
      [Update] The Lease Blob operation establishes and manages a lock on a blob
      for write and delete

      operations
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function renewLease(leaseId: string, options?:
        Models.BlobRenewLeaseOptionalParams):
        Promise<Models.BlobRenewLeaseResponse>
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: options
          type: <xref uid="Models.BlobRenewLeaseOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobRenewLeaseResponse>
        type: Promise&lt;<xref uid="Models.BlobRenewLeaseResponse" />&gt;
  - name: 'renewLease(string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.renewLease_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function renewLease(leaseId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: leaseId
          type: string
          description: Specifies the current lease ID on the resource.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      setAccessControl(BlobSetAccessControlOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.setAccessControl_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setAccessControl(options: BlobSetAccessControlOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-blob.BlobSetAccessControlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setAccessControl(Models.BlobSetAccessControlOptionalParams)
    uid: '@azure/storage-blob.Blob.setAccessControl'
    package: '@azure/storage-blob'
    summary: 'Set the owner, group, permissions, or access control list for a blob.'
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setAccessControl(options?:
        Models.BlobSetAccessControlOptionalParams):
        Promise<Models.BlobSetAccessControlResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobSetAccessControlOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobSetAccessControlResponse>
        type: Promise&lt;<xref uid="Models.BlobSetAccessControlResponse" />&gt;
  - name: setAccessControl(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.setAccessControl_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setAccessControl(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'setHTTPHeaders(BlobSetHTTPHeadersOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.setHTTPHeaders_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setHTTPHeaders(options: BlobSetHTTPHeadersOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetHTTPHeadersOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setHTTPHeaders(Models.BlobSetHTTPHeadersOptionalParams)
    uid: '@azure/storage-blob.Blob.setHTTPHeaders'
    package: '@azure/storage-blob'
    summary: The Set HTTP Headers operation sets system properties on the blob
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setHTTPHeaders(options?:
        Models.BlobSetHTTPHeadersOptionalParams):
        Promise<Models.BlobSetHTTPHeadersResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobSetHTTPHeadersOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobSetHTTPHeadersResponse>
        type: Promise&lt;<xref uid="Models.BlobSetHTTPHeadersResponse" />&gt;
  - name: setHTTPHeaders(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.setHTTPHeaders_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setHTTPHeaders(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'setMetadata(BlobSetMetadataOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.setMetadata_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(options: BlobSetMetadataOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetMetadataOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setMetadata(Models.BlobSetMetadataOptionalParams)
    uid: '@azure/storage-blob.Blob.setMetadata'
    package: '@azure/storage-blob'
    summary: >-
      The Set Blob Metadata operation sets user-defined metadata for the
      specified blob as one or more

      name-value pairs
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(options?: Models.BlobSetMetadataOptionalParams):
        Promise<Models.BlobSetMetadataResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobSetMetadataOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobSetMetadataResponse>
        type: Promise&lt;<xref uid="Models.BlobSetMetadataResponse" />&gt;
  - name: setMetadata(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.setMetadata_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMetadata(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      setTier(Models.AccessTier, BlobSetTierOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.setTier_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setTier(tier: Models.AccessTier, options:
        BlobSetTierOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: tier
          type: <xref uid="Models.AccessTier" />
          description: >-
            Indicates the tier to be set on the blob. Possible values include:
            'P4', 'P6',

            'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80',
            'Hot', 'Cool', 'Archive'
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetTierOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'setTier(Models.AccessTier, Models.BlobSetTierOptionalParams)'
    uid: '@azure/storage-blob.Blob.setTier'
    package: '@azure/storage-blob'
    summary: >-
      The Set Tier operation sets the tier on a blob. The operation is allowed
      on a page blob in a

      premium storage account and on a block blob in a blob storage account
      (locally redundant storage

      only). A premium page blob's tier determines the allowed size, IOPS, and
      bandwidth of the blob.

      A block blob's tier determines Hot/Cool/Archive storage type. This
      operation does not update the

      blob's ETag.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setTier(tier: Models.AccessTier, options?:
        Models.BlobSetTierOptionalParams): Promise<Models.BlobSetTierResponse>
      parameters:
        - id: tier
          type: <xref uid="Models.AccessTier" />
          description: >-
            Indicates the tier to be set on the blob. Possible values include:
            'P4', 'P6',

            'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80',
            'Hot', 'Cool', 'Archive'
        - id: options
          type: <xref uid="Models.BlobSetTierOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobSetTierResponse>
        type: Promise&lt;<xref uid="Models.BlobSetTierResponse" />&gt;
  - name: 'setTier(Models.AccessTier, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.setTier_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setTier(tier: Models.AccessTier, callback:
        ServiceCallback<void>)
      parameters:
        - id: tier
          type: <xref uid="Models.AccessTier" />
          description: >-
            Indicates the tier to be set on the blob. Possible values include:
            'P4', 'P6',

            'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80',
            'Hot', 'Cool', 'Archive'
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      startCopyFromURL(string, BlobStartCopyFromURLOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.startCopyFromURL_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCopyFromURL(copySource: string, options:
        BlobStartCopyFromURLOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: copySource
          type: string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: options
          type: >-
            <xref uid="@azure/storage-blob.BlobStartCopyFromURLOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'startCopyFromURL(string, Models.BlobStartCopyFromURLOptionalParams)'
    uid: '@azure/storage-blob.Blob.startCopyFromURL'
    package: '@azure/storage-blob'
    summary: >-
      The Start Copy From URL operation copies a blob or an internet resource to
      a new blob.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCopyFromURL(copySource: string, options?:
        Models.BlobStartCopyFromURLOptionalParams):
        Promise<Models.BlobStartCopyFromURLResponse>
      parameters:
        - id: copySource
          type: string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: options
          type: <xref uid="Models.BlobStartCopyFromURLOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobStartCopyFromURLResponse>
        type: Promise&lt;<xref uid="Models.BlobStartCopyFromURLResponse" />&gt;
  - name: 'startCopyFromURL(string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.startCopyFromURL_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCopyFromURL(copySource: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: copySource
          type: string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'undelete(BlobUndeleteOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Blob.undelete_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function undelete(options: BlobUndeleteOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobUndeleteOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: undelete(Models.BlobUndeleteOptionalParams)
    uid: '@azure/storage-blob.Blob.undelete'
    package: '@azure/storage-blob'
    summary: Undelete a blob that was previously soft deleted
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function undelete(options?: Models.BlobUndeleteOptionalParams):
        Promise<Models.BlobUndeleteResponse>
      parameters:
        - id: options
          type: <xref uid="Models.BlobUndeleteOptionalParams" />
          description: ''
      return:
        description: Promise<Models.BlobUndeleteResponse>
        type: Promise&lt;<xref uid="Models.BlobUndeleteResponse" />&gt;
  - name: undelete(ServiceCallback<void>)
    uid: '@azure/storage-blob.Blob.undelete_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function undelete(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
