### YamlMime:TSType
name: Service
uid: '@azure/storage-blob.Service'
package: '@azure/storage-blob'
summary: Class representing a Service.
fullName: Service
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: Service(StorageClientContext)
    uid: '@azure/storage-blob.Service.constructor'
    package: '@azure/storage-blob'
    summary: Create a Service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new Service(client: StorageClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/storage-blob.StorageClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: getAccountInfo(msRest.RequestOptionsBase)
    uid: '@azure/storage-blob.Service.getAccountInfo'
    package: '@azure/storage-blob'
    summary: Returns the sku name and account kind
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccountInfo(options?: msRest.RequestOptionsBase):
        Promise<Models.ServiceGetAccountInfoResponse>
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServiceGetAccountInfoResponse>
        type: Promise&lt;<xref uid="Models.ServiceGetAccountInfoResponse" />&gt;
  - name: 'getAccountInfo(RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Service.getAccountInfo_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccountInfo(options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getAccountInfo(ServiceCallback<void>)
    uid: '@azure/storage-blob.Service.getAccountInfo_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAccountInfo(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getProperties(Models.ServiceGetPropertiesOptionalParams)
    uid: '@azure/storage-blob.Service.getProperties'
    package: '@azure/storage-blob'
    summary: >-
      gets the properties of a storage account's Blob service, including
      properties for Storage

      Analytics and CORS (Cross-Origin Resource Sharing) rules.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options?:
        Models.ServiceGetPropertiesOptionalParams):
        Promise<Models.ServiceGetPropertiesResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ServiceGetPropertiesOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceGetPropertiesResponse>
        type: Promise&lt;<xref uid="Models.ServiceGetPropertiesResponse" />&gt;
  - name: getProperties(ServiceCallback<StorageServiceProperties>)
    uid: '@azure/storage-blob.Service.getProperties_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(callback:
        ServiceCallback<StorageServiceProperties>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-blob.StorageServiceProperties" />&gt;
          description: |
            The callback
  - name: >-
      getProperties(ServiceGetPropertiesOptionalParams,
      ServiceCallback<StorageServiceProperties>)
    uid: '@azure/storage-blob.Service.getProperties_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options: ServiceGetPropertiesOptionalParams,
        callback: ServiceCallback<StorageServiceProperties>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-blob.ServiceGetPropertiesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-blob.StorageServiceProperties" />&gt;
          description: |
            The callback
  - name: getStatistics(Models.ServiceGetStatisticsOptionalParams)
    uid: '@azure/storage-blob.Service.getStatistics'
    package: '@azure/storage-blob'
    summary: >-
      Retrieves statistics related to replication for the Blob service. It is
      only available on the

      secondary location endpoint when read-access geo-redundant replication is
      enabled for the

      storage account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getStatistics(options?:
        Models.ServiceGetStatisticsOptionalParams):
        Promise<Models.ServiceGetStatisticsResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ServiceGetStatisticsOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceGetStatisticsResponse>
        type: Promise&lt;<xref uid="Models.ServiceGetStatisticsResponse" />&gt;
  - name: getStatistics(ServiceCallback<StorageServiceStats>)
    uid: '@azure/storage-blob.Service.getStatistics_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getStatistics(callback: ServiceCallback<StorageServiceStats>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-blob.StorageServiceStats" />&gt;
          description: |
            The callback
  - name: >-
      getStatistics(ServiceGetStatisticsOptionalParams,
      ServiceCallback<StorageServiceStats>)
    uid: '@azure/storage-blob.Service.getStatistics_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getStatistics(options: ServiceGetStatisticsOptionalParams,
        callback: ServiceCallback<StorageServiceStats>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-blob.ServiceGetStatisticsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-blob.StorageServiceStats" />&gt;
          description: |
            The callback
  - name: >-
      getUserDelegationKey(KeyInfo,
      Models.ServiceGetUserDelegationKeyOptionalParams)
    uid: '@azure/storage-blob.Service.getUserDelegationKey'
    package: '@azure/storage-blob'
    summary: >-
      Retrieves a user delegation key for the Blob service. This is only a valid
      operation when using

      bearer token authentication.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getUserDelegationKey(keyInfo: KeyInfo, options?:
        Models.ServiceGetUserDelegationKeyOptionalParams):
        Promise<Models.ServiceGetUserDelegationKeyResponse>
      parameters:
        - id: keyInfo
          type: <xref uid="@azure/storage-blob.KeyInfo" />
          description: ''
        - id: options
          type: <xref uid="Models.ServiceGetUserDelegationKeyOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceGetUserDelegationKeyResponse>
        type: >-
          Promise&lt;<xref uid="Models.ServiceGetUserDelegationKeyResponse"
          />&gt;
  - name: 'getUserDelegationKey(KeyInfo, ServiceCallback<UserDelegationKey>)'
    uid: '@azure/storage-blob.Service.getUserDelegationKey_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getUserDelegationKey(keyInfo: KeyInfo, callback:
        ServiceCallback<UserDelegationKey>)
      parameters:
        - id: keyInfo
          type: <xref uid="@azure/storage-blob.KeyInfo" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/storage-blob.UserDelegationKey"
            />&gt;
          description: |
            The callback
  - name: >-
      getUserDelegationKey(KeyInfo, ServiceGetUserDelegationKeyOptionalParams,
      ServiceCallback<UserDelegationKey>)
    uid: '@azure/storage-blob.Service.getUserDelegationKey_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getUserDelegationKey(keyInfo: KeyInfo, options:
        ServiceGetUserDelegationKeyOptionalParams, callback:
        ServiceCallback<UserDelegationKey>)
      parameters:
        - id: keyInfo
          type: <xref uid="@azure/storage-blob.KeyInfo" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/storage-blob.ServiceGetUserDelegationKeyOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/storage-blob.UserDelegationKey"
            />&gt;
          description: |
            The callback
  - name: listContainersSegment(Models.ServiceListContainersSegmentOptionalParams)
    uid: '@azure/storage-blob.Service.listContainersSegment'
    package: '@azure/storage-blob'
    summary: >-
      The List Containers Segment operation returns a list of the containers
      under the specified

      account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listContainersSegment(options?:
        Models.ServiceListContainersSegmentOptionalParams):
        Promise<Models.ServiceListContainersSegmentResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ServiceListContainersSegmentOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceListContainersSegmentResponse>
        type: >-
          Promise&lt;<xref uid="Models.ServiceListContainersSegmentResponse"
          />&gt;
  - name: listContainersSegment(ServiceCallback<ListContainersSegmentResponse>)
    uid: '@azure/storage-blob.Service.listContainersSegment_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listContainersSegment(callback:
        ServiceCallback<ListContainersSegmentResponse>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-blob.ListContainersSegmentResponse" />&gt;
          description: |
            The callback
  - name: >-
      listContainersSegment(ServiceListContainersSegmentOptionalParams,
      ServiceCallback<ListContainersSegmentResponse>)
    uid: '@azure/storage-blob.Service.listContainersSegment_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listContainersSegment(options:
        ServiceListContainersSegmentOptionalParams, callback:
        ServiceCallback<ListContainersSegmentResponse>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/storage-blob.ServiceListContainersSegmentOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/storage-blob.ListContainersSegmentResponse" />&gt;
          description: |
            The callback
  - name: >-
      setProperties(StorageServiceProperties,
      Models.ServiceSetPropertiesOptionalParams)
    uid: '@azure/storage-blob.Service.setProperties'
    package: '@azure/storage-blob'
    summary: >-
      Sets properties for a storage account's Blob service endpoint, including
      properties for Storage

      Analytics and CORS (Cross-Origin Resource Sharing) rules
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(storageServiceProperties:
        StorageServiceProperties, options?:
        Models.ServiceSetPropertiesOptionalParams):
        Promise<Models.ServiceSetPropertiesResponse>
      parameters:
        - id: storageServiceProperties
          type: <xref uid="@azure/storage-blob.StorageServiceProperties" />
          description: The StorageService properties.
        - id: options
          type: <xref uid="Models.ServiceSetPropertiesOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceSetPropertiesResponse>
        type: Promise&lt;<xref uid="Models.ServiceSetPropertiesResponse" />&gt;
  - name: 'setProperties(StorageServiceProperties, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Service.setProperties_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(storageServiceProperties:
        StorageServiceProperties, callback: ServiceCallback<void>)
      parameters:
        - id: storageServiceProperties
          type: <xref uid="@azure/storage-blob.StorageServiceProperties" />
          description: The StorageService properties.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      setProperties(StorageServiceProperties,
      ServiceSetPropertiesOptionalParams, ServiceCallback<void>)
    uid: '@azure/storage-blob.Service.setProperties_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(storageServiceProperties:
        StorageServiceProperties, options: ServiceSetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: storageServiceProperties
          type: <xref uid="@azure/storage-blob.StorageServiceProperties" />
          description: The StorageService properties.
        - id: options
          type: >-
            <xref uid="@azure/storage-blob.ServiceSetPropertiesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      submitBatch(msRest.HttpRequestBody, number, string,
      Models.ServiceSubmitBatchOptionalParams)
    uid: '@azure/storage-blob.Service.submitBatch'
    package: '@azure/storage-blob'
    summary: >-
      The Batch operation allows multiple API calls to be embedded into a single
      HTTP request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitBatch(body: msRest.HttpRequestBody, contentLength:
        number, multipartContentType: string, options?:
        Models.ServiceSubmitBatchOptionalParams):
        Promise<Models.ServiceSubmitBatchResponse>
      parameters:
        - id: body
          type: <xref uid="msRest.HttpRequestBody" />
          description: Initial data
        - id: contentLength
          type: number
          description: The length of the request.
        - id: multipartContentType
          type: string
          description: >-
            Required. The value of this header must be multipart/mixed with a

            batch boundary. Example header value: multipart/mixed;
            boundary=batch_<GUID>
        - id: options
          type: <xref uid="Models.ServiceSubmitBatchOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceSubmitBatchResponse>
        type: Promise&lt;<xref uid="Models.ServiceSubmitBatchResponse" />&gt;
  - name: 'submitBatch(msRest.HttpRequestBody, number, string, ServiceCallback<void>)'
    uid: '@azure/storage-blob.Service.submitBatch_1'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitBatch(body: msRest.HttpRequestBody, contentLength:
        number, multipartContentType: string, callback: ServiceCallback<void>)
      parameters:
        - id: body
          type: <xref uid="msRest.HttpRequestBody" />
          description: Initial data
        - id: contentLength
          type: number
          description: The length of the request.
        - id: multipartContentType
          type: string
          description: >-
            Required. The value of this header must be multipart/mixed with a

            batch boundary. Example header value: multipart/mixed;
            boundary=batch_<GUID>
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      submitBatch(msRest.HttpRequestBody, number, string,
      ServiceSubmitBatchOptionalParams, ServiceCallback<void>)
    uid: '@azure/storage-blob.Service.submitBatch_2'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitBatch(body: msRest.HttpRequestBody, contentLength:
        number, multipartContentType: string, options:
        ServiceSubmitBatchOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: body
          type: <xref uid="msRest.HttpRequestBody" />
          description: Initial data
        - id: contentLength
          type: number
          description: The length of the request.
        - id: multipartContentType
          type: string
          description: >-
            Required. The value of this header must be multipart/mixed with a

            batch boundary. Example header value: multipart/mixed;
            boundary=batch_<GUID>
        - id: options
          type: <xref uid="@azure/storage-blob.ServiceSubmitBatchOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
