### YamlMime:TSType
name: Vaults
uid: azure-arm-keyvault.Vaults|legacy
package: azure-arm-keyvault|legacy
summary: ''
fullName: Vaults
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters, Object)
    uid: azure-arm-keyvault.Vaults.beginCreateOrUpdate|legacy
    package: azure-arm-keyvault|legacy
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: |
            Parameters to create or update the vault
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters, Object,
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.beginCreateOrUpdate_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, options: Object,
        callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters,
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.beginCreateOrUpdate_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      VaultCreateOrUpdateParameters, Object)
    uid: >-
      azure-arm-keyvault.Vaults.beginCreateOrUpdateWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, parameters: VaultCreateOrUpdateParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: |
            Parameters to create or update the vault
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault|legacy" />&gt;&gt;
        description: A promise is returned
  - name: beginPurgeDeleted(string, string, Object)
    uid: azure-arm-keyvault.Vaults.beginPurgeDeleted|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string,
        options?: Object)
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: beginPurgeDeleted(string, string, Object, ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.beginPurgeDeleted_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: beginPurgeDeleted(string, string, ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.beginPurgeDeleted_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: beginPurgeDeletedWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-arm-keyvault.Vaults.beginPurgeDeletedWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeletedWithHttpOperationResponse(vaultName: string,
        location: string, options?: Object)
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
        description: A promise is returned
  - name: checkNameAvailability(VaultCheckNameAvailabilityParameters, Object)
    uid: azure-arm-keyvault.Vaults.checkNameAvailability|legacy
    package: azure-arm-keyvault|legacy
    summary: Checks that the vault name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options?: Object)
      parameters:
        - id: vaultName
          type: >-
            <xref
            uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters|legacy"
            />
          description: |
            The name of the vault.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-arm-keyvault.CheckNameAvailabilityResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CheckNameAvailabilityResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CheckNameAvailabilityResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link CheckNameAvailabilityResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters, Object,
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: azure-arm-keyvault.Vaults.checkNameAvailability_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options: Object, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: vaultName
          type: >-
            <xref
            uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters|legacy"
            />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.CheckNameAvailabilityResult|legacy" />&gt;
          description: ''
  - name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters,
      ServiceCallback<CheckNameAvailabilityResult>)
    uid: azure-arm-keyvault.Vaults.checkNameAvailability_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: vaultName
          type: >-
            <xref
            uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters|legacy"
            />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.CheckNameAvailabilityResult|legacy" />&gt;
          description: ''
  - name: >-
      checkNameAvailabilityWithHttpOperationResponse(VaultCheckNameAvailabilityParameters,
      Object)
    uid: >-
      azure-arm-keyvault.Vaults.checkNameAvailabilityWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Checks that the vault name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailabilityWithHttpOperationResponse(vaultName:
        VaultCheckNameAvailabilityParameters, options?: Object)
      parameters:
        - id: vaultName
          type: >-
            <xref
            uid="azure-arm-keyvault.VaultCheckNameAvailabilityParameters|legacy"
            />
          description: |
            The name of the vault.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.CheckNameAvailabilityResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: createOrUpdate(string, string, VaultCreateOrUpdateParameters, Object)
    uid: azure-arm-keyvault.Vaults.createOrUpdate|legacy
    package: azure-arm-keyvault|legacy
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vaultName: string,
        parameters: VaultCreateOrUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: |
            Parameters to create or update the vault
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      createOrUpdate(string, string, VaultCreateOrUpdateParameters, Object,
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.createOrUpdate_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vaultName: string,
        parameters: VaultCreateOrUpdateParameters, options: Object, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: >-
      createOrUpdate(string, string, VaultCreateOrUpdateParameters,
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.createOrUpdate_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vaultName: string,
        parameters: VaultCreateOrUpdateParameters, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: >-
      createOrUpdateWithHttpOperationResponse(string, string,
      VaultCreateOrUpdateParameters, Object)
    uid: azure-arm-keyvault.Vaults.createOrUpdateWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, parameters: VaultCreateOrUpdateParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: >-
            <xref uid="azure-arm-keyvault.VaultCreateOrUpdateParameters|legacy"
            />
          description: |
            Parameters to create or update the vault
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteMethod(string, string, Object)
    uid: azure-arm-keyvault.Vaults.deleteMethod|legacy
    package: azure-arm-keyvault|legacy
    summary: Deletes the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault to delete
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: deleteMethod(string, string, Object, ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.deleteMethod_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: deleteMethod(string, string, ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.deleteMethod_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vaultName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: deleteMethodWithHttpOperationResponse(string, string, Object)
    uid: azure-arm-keyvault.Vaults.deleteMethodWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Deletes the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault to delete
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
        description: A promise is returned
  - name: get(string, string, Object)
    uid: azure-arm-keyvault.Vaults.get|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: get(string, string, Object, ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.get_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options:
        Object, callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: get(string, string, ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.get_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: getDeleted(string, string, Object)
    uid: azure-arm-keyvault.Vaults.getDeleted|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets the deleted Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options?:
        Object)
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: location
          type: string
          description: |
            The location of the deleted vault.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-arm-keyvault.DeletedVault|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedVault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedVault} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVault} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getDeleted(string, string, Object, ServiceCallback<DeletedVault>)
    uid: azure-arm-keyvault.Vaults.getDeleted_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options:
        Object, callback: ServiceCallback<DeletedVault>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVault|legacy" />&gt;
          description: ''
  - name: getDeleted(string, string, ServiceCallback<DeletedVault>)
    uid: azure-arm-keyvault.Vaults.getDeleted_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, callback:
        ServiceCallback<DeletedVault>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVault|legacy" />&gt;
          description: ''
  - name: getDeletedWithHttpOperationResponse(string, string, Object)
    uid: azure-arm-keyvault.Vaults.getDeletedWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets the deleted Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedWithHttpOperationResponse(vaultName: string,
        location: string, options?: Object)
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: location
          type: string
          description: |
            The location of the deleted vault.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.DeletedVault|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getWithHttpOperationResponse(string, string, Object)
    uid: azure-arm-keyvault.Vaults.getWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        vaultName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            The name of the vault.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault|legacy" />&gt;&gt;
        description: A promise is returned
  - name: list(Object)
    uid: azure-arm-keyvault.Vaults.list|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.ResourceListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: list(Object, ServiceCallback<ResourceListResult>)
    uid: azure-arm-keyvault.Vaults.list_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.ResourceListResult|legacy" />&gt;
          description: ''
  - name: list(ServiceCallback<ResourceListResult>)
    uid: azure-arm-keyvault.Vaults.list_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ResourceListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.ResourceListResult|legacy" />&gt;
          description: ''
  - name: listByResourceGroup(string, Object)
    uid: azure-arm-keyvault.Vaults.listByResourceGroup|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: listByResourceGroup(string, Object, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listByResourceGroup_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: Object,
        callback: ServiceCallback<VaultListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listByResourceGroup(string, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listByResourceGroup_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listByResourceGroupNext(string, Object)
    uid: azure-arm-keyvault.Vaults.listByResourceGroupNext|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: listByResourceGroupNext(string, Object, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listByResourceGroupNext_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listByResourceGroupNext(string, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listByResourceGroupNext_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listByResourceGroupNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-arm-keyvault.Vaults.listByResourceGroupNextWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: listByResourceGroupWithHttpOperationResponse(string, Object)
    uid: >-
      azure-arm-keyvault.Vaults.listByResourceGroupWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: listBySubscription(Object)
    uid: azure-arm-keyvault.Vaults.listBySubscription|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(options?: Object)'
      parameters:
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: listBySubscription(Object, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listBySubscription_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: Object, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listBySubscription(ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listBySubscription_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscription(callback: ServiceCallback<VaultListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listBySubscriptionNext(string, Object)
    uid: azure-arm-keyvault.Vaults.listBySubscriptionNext|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscriptionNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.VaultListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: listBySubscriptionNext(string, Object, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listBySubscriptionNext_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listBySubscriptionNext(string, ServiceCallback<VaultListResult>)
    uid: azure-arm-keyvault.Vaults.listBySubscriptionNext_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNext(nextPageLink: string, callback:
        ServiceCallback<VaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;
          description: ''
  - name: listBySubscriptionNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-arm-keyvault.Vaults.listBySubscriptionNextWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: listBySubscriptionWithHttpOperationResponse(Object)
    uid: >-
      azure-arm-keyvault.Vaults.listBySubscriptionWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listBySubscriptionWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: listDeleted(Object)
    uid: azure-arm-keyvault.Vaults.listDeleted|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listDeleted(options?: Object)'
      parameters:
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedVaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedVaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVaultListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: listDeleted(Object, ServiceCallback<DeletedVaultListResult>)
    uid: azure-arm-keyvault.Vaults.listDeleted_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeleted(options: Object, callback:
        ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;
          description: ''
  - name: listDeleted(ServiceCallback<DeletedVaultListResult>)
    uid: azure-arm-keyvault.Vaults.listDeleted_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listDeleted(callback: ServiceCallback<DeletedVaultListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;
          description: ''
  - name: listDeletedNext(string, Object)
    uid: azure-arm-keyvault.Vaults.listDeletedNext|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listDeletedNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedVaultListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedVaultListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVaultListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: listDeletedNext(string, Object, ServiceCallback<DeletedVaultListResult>)
    uid: azure-arm-keyvault.Vaults.listDeletedNext_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;
          description: ''
  - name: listDeletedNext(string, ServiceCallback<DeletedVaultListResult>)
    uid: azure-arm-keyvault.Vaults.listDeletedNext_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedNext(nextPageLink: string, callback:
        ServiceCallback<DeletedVaultListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;
          description: ''
  - name: listDeletedNextWithHttpOperationResponse(string, Object)
    uid: azure-arm-keyvault.Vaults.listDeletedNextWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeletedNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: listDeletedWithHttpOperationResponse(Object)
    uid: azure-arm-keyvault.Vaults.listDeletedWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listDeletedWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.DeletedVaultListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: listNext(string, Object)
    uid: azure-arm-keyvault.Vaults.listNext|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-arm-keyvault.ResourceListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: listNext(string, Object, ServiceCallback<ResourceListResult>)
    uid: azure-arm-keyvault.Vaults.listNext_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.ResourceListResult|legacy" />&gt;
          description: ''
  - name: listNext(string, ServiceCallback<ResourceListResult>)
    uid: azure-arm-keyvault.Vaults.listNext_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ResourceListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.ResourceListResult|legacy" />&gt;
          description: ''
  - name: listNextWithHttpOperationResponse(string, Object)
    uid: azure-arm-keyvault.Vaults.listNextWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.ResourceListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: listWithHttpOperationResponse(Object)
    uid: azure-arm-keyvault.Vaults.listWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.ResourceListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: purgeDeleted(string, string, Object)
    uid: azure-arm-keyvault.Vaults.purgeDeleted|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeleted(vaultName: string, location: string, options?:
        Object)
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: purgeDeleted(string, string, Object, ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.purgeDeleted_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeleted(vaultName: string, location: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeleted(string, string, ServiceCallback<void>)
    uid: azure-arm-keyvault.Vaults.purgeDeleted_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeleted(vaultName: string, location: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: vaultName
          type: string
          description: ''
        - id: location
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedWithHttpOperationResponse(string, string, Object)
    uid: azure-arm-keyvault.Vaults.purgeDeletedWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedWithHttpOperationResponse(vaultName: string,
        location: string, options?: Object)
      parameters:
        - id: vaultName
          type: string
          description: |
            The name of the soft-deleted vault.
        - id: location
          type: string
          description: |
            The location of the soft-deleted vault.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
        description: A promise is returned
  - name: update(string, string, VaultPatchParameters, Object)
    uid: azure-arm-keyvault.Vaults.update|legacy
    package: azure-arm-keyvault|legacy
    summary: Update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters|legacy" />
          description: |
            Parameters to patch the vault
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-arm-keyvault.Vault|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Vault} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Vault} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      update(string, string, VaultPatchParameters, Object,
      ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.update_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options: Object, callback:
        ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters|legacy" />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: update(string, string, VaultPatchParameters, ServiceCallback<Vault>)
    uid: azure-arm-keyvault.Vaults.update_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, callback: ServiceCallback<Vault>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters|legacy" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-arm-keyvault.Vault|legacy"
            />&gt;
          description: ''
  - name: >-
      updateAccessPolicy(string, string, string, VaultAccessPolicyParameters,
      Object)
    uid: azure-arm-keyvault.Vaults.updateAccessPolicy|legacy
    package: azure-arm-keyvault|legacy
    summary: Update access policies in a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: string, parameters: VaultAccessPolicyParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: operationKind
          type: string
          description: |
            Name of the operation. Possible values
            include: 'add', 'replace', 'remove'
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />
          description: |
            Access policy to merge into the vault
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VaultAccessPolicyParameters} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VaultAccessPolicyParameters} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultAccessPolicyParameters} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateAccessPolicy(string, string, string, VaultAccessPolicyParameters,
      Object, ServiceCallback<VaultAccessPolicyParameters>)
    uid: azure-arm-keyvault.Vaults.updateAccessPolicy_2|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: string, parameters: VaultAccessPolicyParameters,
        options: Object, callback: ServiceCallback<VaultAccessPolicyParameters>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: operationKind
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />&gt;
          description: ''
  - name: >-
      updateAccessPolicy(string, string, string, VaultAccessPolicyParameters,
      ServiceCallback<VaultAccessPolicyParameters>)
    uid: azure-arm-keyvault.Vaults.updateAccessPolicy_1|legacy
    package: azure-arm-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: string, parameters: VaultAccessPolicyParameters,
        callback: ServiceCallback<VaultAccessPolicyParameters>)
      parameters:
        - id: resourceGroupName
          type: string
          description: ''
        - id: vaultName
          type: string
          description: ''
        - id: operationKind
          type: string
          description: ''
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />&gt;
          description: ''
  - name: >-
      updateAccessPolicyWithHttpOperationResponse(string, string, string,
      VaultAccessPolicyParameters, Object)
    uid: >-
      azure-arm-keyvault.Vaults.updateAccessPolicyWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Update access policies in a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicyWithHttpOperationResponse(resourceGroupName:
        string, vaultName: string, operationKind: string, parameters:
        VaultAccessPolicyParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: operationKind
          type: string
          description: |
            Name of the operation. Possible values
            include: 'add', 'replace', 'remove'
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />
          description: |
            Access policy to merge into the vault
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.VaultAccessPolicyParameters|legacy" />&gt;&gt;
        description: A promise is returned
  - name: >-
      updateWithHttpOperationResponse(string, string, VaultPatchParameters,
      Object)
    uid: azure-arm-keyvault.Vaults.updateWithHttpOperationResponse|legacy
    package: azure-arm-keyvault|legacy
    summary: Update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        vaultName: string, parameters: VaultPatchParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type: string
          description: |
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type: string
          description: |
            Name of the vault
        - id: parameters
          type: <xref uid="azure-arm-keyvault.VaultPatchParameters|legacy" />
          description: |
            Parameters to patch the vault
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-arm-keyvault.Vault|legacy" />&gt;&gt;
        description: A promise is returned
