### YamlMime:TSType
name: KeyVaultClient
uid: azure-keyvault.KeyVaultClient|legacy
package: azure-keyvault|legacy
summary: ''
fullName: KeyVaultClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: KeyVaultClient(ServiceClientCredentials, AzureServiceClientOptions)
    uid: azure-keyvault.KeyVaultClient.constructor|legacy
    package: azure-keyvault|legacy
    summary: Initializes a new instance of the KeyVaultClient class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new KeyVaultClient(credentials: ServiceClientCredentials, options?:
        AzureServiceClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: |
            Credentials needed for the client to connect to Azure.
        - id: options
          type: AzureServiceClientOptions
          description: ''
properties:
  - name: acceptLanguage
    uid: azure-keyvault.KeyVaultClient.acceptLanguage|legacy
    package: azure-keyvault|legacy
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        type: string
        description: ''
  - name: apiVersion
    uid: azure-keyvault.KeyVaultClient.apiVersion|legacy
    package: azure-keyvault|legacy
    summary: ''
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        type: string
        description: ''
  - name: credentials
    uid: azure-keyvault.KeyVaultClient.credentials|legacy
    package: azure-keyvault|legacy
    summary: ''
    fullName: credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type: ServiceClientCredentials
        description: ''
  - name: generateClientRequestId
    uid: azure-keyvault.KeyVaultClient.generateClientRequestId|legacy
    package: azure-keyvault|legacy
    summary: ''
    fullName: generateClientRequestId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'generateClientRequestId: boolean'
      return:
        type: boolean
        description: ''
  - name: longRunningOperationRetryTimeout
    uid: azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout|legacy
    package: azure-keyvault|legacy
    summary: ''
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout: number'
      return:
        type: number
        description: ''
methods:
  - name: addUserAgentInfo(any)
    uid: azure-keyvault.KeyVaultClient.addUserAgentInfo|legacy
    package: azure-keyvault|legacy
    summary: Adds custom information to user agent header
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type: any
          description: |
            information to be added to user agent header, as string.
  - name: backupCertificate(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.backupCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.BackupCertificateResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {BackupCertificateResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {BackupCertificateResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link BackupCertificateResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      backupCertificate(string, string, Object,
      ServiceCallback<BackupCertificateResult>)
    uid: azure-keyvault.KeyVaultClient.backupCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<BackupCertificateResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.BackupCertificateResult|legacy" />&gt;
          description: ''
  - name: >-
      backupCertificate(string, string,
      ServiceCallback<BackupCertificateResult>)
    uid: azure-keyvault.KeyVaultClient.backupCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<BackupCertificateResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.BackupCertificateResult|legacy" />&gt;
          description: ''
  - name: backupCertificateWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.backupCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.BackupCertificateResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: backupKey(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.backupKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupKey(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.BackupKeyResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {BackupKeyResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {BackupKeyResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link BackupKeyResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: backupKey(string, string, Object, ServiceCallback<BackupKeyResult>)
    uid: azure-keyvault.KeyVaultClient.backupKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<BackupKeyResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.BackupKeyResult|legacy"
            />&gt;
          description: ''
  - name: backupKey(string, string, ServiceCallback<BackupKeyResult>)
    uid: azure-keyvault.KeyVaultClient.backupKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupKey(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<BackupKeyResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.BackupKeyResult|legacy"
            />&gt;
          description: ''
  - name: backupKeyWithHttpOperationResponse(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.BackupKeyResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: backupSecret(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.backupSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.BackupSecretResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {BackupSecretResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {BackupSecretResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link BackupSecretResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: backupSecret(string, string, Object, ServiceCallback<BackupSecretResult>)
    uid: azure-keyvault.KeyVaultClient.backupSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupSecret(vaultBaseUrl: string, secretName: string, options:
        Object, callback: ServiceCallback<BackupSecretResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.BackupSecretResult|legacy" />&gt;
          description: ''
  - name: backupSecret(string, string, ServiceCallback<BackupSecretResult>)
    uid: azure-keyvault.KeyVaultClient.backupSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<BackupSecretResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.BackupSecretResult|legacy" />&gt;
          description: ''
  - name: backupSecretWithHttpOperationResponse(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.BackupSecretResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: backupStorageAccount(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.backupStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.BackupStorageResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {BackupStorageResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {BackupStorageResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link BackupStorageResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      backupStorageAccount(string, string, Object,
      ServiceCallback<BackupStorageResult>)
    uid: azure-keyvault.KeyVaultClient.backupStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback: ServiceCallback<BackupStorageResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.BackupStorageResult|legacy" />&gt;
          description: ''
  - name: backupStorageAccount(string, string, ServiceCallback<BackupStorageResult>)
    uid: azure-keyvault.KeyVaultClient.backupStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<BackupStorageResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.BackupStorageResult|legacy" />&gt;
          description: ''
  - name: backupStorageAccountWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.backupStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function backupStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.BackupStorageResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: createCertificate(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.createCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateOperation|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateOperation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateOperation} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateOperation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      createCertificate(string, string, Object,
      ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.createCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: createCertificate(string, string, ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.createCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: createCertificateWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateOperation|legacy" />&gt;&gt;
        description: A promise is returned
  - name: createKey(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.createKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createKey(vaultBaseUrl: string, keyName: string, kty: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name for the new key. The system will generate
            the version name for the new key.
        - id: kty
          type: string
          description: >
            The type of key to create. For valid values, see

            JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA',
            'RSA-HSM',

            'oct'
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: createKey(string, string, string, Object, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.createKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createKey(vaultBaseUrl: string, keyName: string, kty: string,
        options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: kty
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: createKey(string, string, string, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.createKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createKey(vaultBaseUrl: string, keyName: string, kty: string,
        callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: kty
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: createKeyWithHttpOperationResponse(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, kty: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name for the new key. The system will generate
            the version name for the new key.
        - id: kty
          type: string
          description: >
            The type of key to create. For valid values, see

            JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA',
            'RSA-HSM',

            'oct'
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: decrypt(string, string, string, string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.decrypt|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function decrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyOperationResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyOperationResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyOperationResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      decrypt(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.decrypt_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function decrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      decrypt(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.decrypt_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function decrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      decryptWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    uid: azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function decryptWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyOperationResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteCertificate(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedCertificateBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedCertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedCertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedCertificateBundle} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      deleteCertificate(string, string, Object,
      ServiceCallback<DeletedCertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateBundle|legacy" />&gt;
          description: ''
  - name: >-
      deleteCertificate(string, string,
      ServiceCallback<DeletedCertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateBundle|legacy" />&gt;
          description: ''
  - name: deleteCertificateContacts(string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateContacts(vaultBaseUrl: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Contacts} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Contacts} [result]   - The deserialized result object if an error did not occur.
                               See {@link Contacts} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: deleteCertificateContacts(string, Object, ServiceCallback<Contacts>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateContacts(vaultBaseUrl: string, options:
        Object, callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
          description: ''
  - name: deleteCertificateContacts(string, ServiceCallback<Contacts>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateContacts(vaultBaseUrl: string, callback:
        ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
          description: ''
  - name: deleteCertificateContactsWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.Contacts|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteCertificateIssuer(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.IssuerBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {IssuerBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {IssuerBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link IssuerBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      deleteCertificateIssuer(string, string, Object,
      ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options: Object, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: deleteCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: deleteCertificateIssuerWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.IssuerBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteCertificateOperation(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateOperation(vaultBaseUrl: string,
        certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateOperation|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateOperation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateOperation} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateOperation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      deleteCertificateOperation(string, string, Object,
      ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateOperation(vaultBaseUrl: string,
        certificateName: string, options: Object, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: >-
      deleteCertificateOperation(string, string,
      ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateOperation(vaultBaseUrl: string,
        certificateName: string, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: >-
      deleteCertificateOperationWithHttpOperationResponse(string, string,
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateOperation|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteCertificateWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedCertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteKey(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteKey(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key to delete.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedKeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedKeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedKeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: deleteKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;
          description: ''
  - name: deleteKey(string, string, ServiceCallback<DeletedKeyBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteKey(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;
          description: ''
  - name: deleteKeyWithHttpOperationResponse(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key to delete.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteSasDefinition(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteSasDefinition|legacy
    package: azure-keyvault|legacy
    summary: |-
      Deletes a SAS definition from a specified storage account. This operation
      requires the storage/deletesas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSasDefinitionBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSasDefinitionBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSasDefinitionBundle} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      deleteSasDefinition(string, string, string, Object,
      ServiceCallback<DeletedSasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options: Object, callback:
        ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      deleteSasDefinition(string, string, string,
      ServiceCallback<DeletedSasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, callback:
        ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      deleteSasDefinitionWithHttpOperationResponse(string, string, string,
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      Deletes a SAS definition from a specified storage account. This operation
      requires the storage/deletesas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteSecret(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedSecretBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSecretBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSecretBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSecretBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: deleteSecret(string, string, Object, ServiceCallback<DeletedSecretBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSecret(vaultBaseUrl: string, secretName: string, options:
        Object, callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretBundle|legacy" />&gt;
          description: ''
  - name: deleteSecret(string, string, ServiceCallback<DeletedSecretBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretBundle|legacy" />&gt;
          description: ''
  - name: deleteSecretWithHttpOperationResponse(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSecretBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: deleteStorageAccount(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.deleteStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: |-
      Deletes a storage account. This operation requires the storage/delete
      permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedStorageBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedStorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedStorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedStorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      deleteStorageAccount(string, string, Object,
      ServiceCallback<DeletedStorageBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback:
        ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageBundle|legacy" />&gt;
          description: ''
  - name: >-
      deleteStorageAccount(string, string,
      ServiceCallback<DeletedStorageBundle>)
    uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageBundle|legacy" />&gt;
          description: ''
  - name: deleteStorageAccountWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      Deletes a storage account. This operation requires the storage/delete
      permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedStorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: encrypt(string, string, string, string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.encrypt|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function encrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyOperationResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyOperationResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyOperationResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      encrypt(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.encrypt_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function encrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      encrypt(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.encrypt_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function encrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      encryptWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    uid: azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function encryptWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyOperationResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificate(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificate(vaultBaseUrl: string, certificateName: string,
        certificateVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificateVersion
          type: string
          description: |
            The version of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificateBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificate(string, string, string, Object,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.getCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificate(vaultBaseUrl: string, certificateName: string,
        certificateVersion: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: certificateVersion
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: getCertificate(string, string, string, ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.getCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificate(vaultBaseUrl: string, certificateName: string,
        certificateVersion: string, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: certificateVersion
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: getCertificateContacts(string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificateContacts|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getCertificateContacts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Contacts} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Contacts} [result]   - The deserialized result object if an error did not occur.
                               See {@link Contacts} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getCertificateContacts(string, Object, ServiceCallback<Contacts>)
    uid: azure-keyvault.KeyVaultClient.getCertificateContacts_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateContacts(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
          description: ''
  - name: getCertificateContacts(string, ServiceCallback<Contacts>)
    uid: azure-keyvault.KeyVaultClient.getCertificateContacts_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateContacts(vaultBaseUrl: string, callback:
        ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
          description: ''
  - name: getCertificateContactsWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateContactsWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.Contacts|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificateIssuer(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuer|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.IssuerBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {IssuerBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {IssuerBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link IssuerBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificateIssuer(string, string, Object,
      ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        options: Object, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: getCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: getCertificateIssuers(string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuers|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getCertificateIssuers(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateIssuerListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateIssuerListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateIssuerListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificateIssuers(string, Object,
      ServiceCallback<CertificateIssuerListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuers(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;
          description: ''
  - name: >-
      getCertificateIssuers(string,
      ServiceCallback<CertificateIssuerListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuers(vaultBaseUrl: string, callback:
        ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;
          description: ''
  - name: getCertificateIssuersNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuersNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateIssuerListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateIssuerListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateIssuerListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificateIssuersNext(string, Object,
      ServiceCallback<CertificateIssuerListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuersNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;
          description: ''
  - name: >-
      getCertificateIssuersNext(string,
      ServiceCallback<CertificateIssuerListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuersNext(nextPageLink: string, callback:
        ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;
          description: ''
  - name: getCertificateIssuersNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getCertificateIssuersNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificateIssuersWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateIssuerListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificateIssuerWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.IssuerBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificateOperation(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificateOperation|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateOperation(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateOperation|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateOperation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateOperation} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateOperation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificateOperation(string, string, Object,
      ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.getCertificateOperation_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateOperation(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: >-
      getCertificateOperation(string, string,
      ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.getCertificateOperation_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateOperation(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: getCertificateOperationWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateOperationWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateOperation|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificatePolicy(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificatePolicy|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in a given key
            vault.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificatePolicy|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificatePolicy} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificatePolicy} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificatePolicy} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificatePolicy(string, string, Object,
      ServiceCallback<CertificatePolicy>)
    uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, options: Object, callback: ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificatePolicy|legacy" />&gt;
          description: ''
  - name: getCertificatePolicy(string, string, ServiceCallback<CertificatePolicy>)
    uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificatePolicy|legacy" />&gt;
          description: ''
  - name: getCertificatePolicyWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in a given key
            vault.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificatePolicy|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificates(string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificates|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getCertificates(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getCertificates(string, Object, ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificates_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificates(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: getCertificates(string, ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificates_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificates(vaultBaseUrl: string, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: getCertificatesNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificatesNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getCertificatesNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificatesNext(string, Object,
      ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificatesNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatesNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: getCertificatesNext(string, ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificatesNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatesNext(nextPageLink: string, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: getCertificatesNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatesNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificatesWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificatesWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificateVersions(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificateVersions|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateVersions(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificateVersions(string, string, Object,
      ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateVersions_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateVersions(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: >-
      getCertificateVersions(string, string,
      ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateVersions_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateVersions(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: getCertificateVersionsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateVersionsNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getCertificateVersionsNext(string, Object,
      ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateVersionsNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: getCertificateVersionsNext(string, ServiceCallback<CertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateVersionsNext(nextPageLink: string, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateListResult|legacy" />&gt;
          description: ''
  - name: getCertificateVersionsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getCertificateVersionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificateVersionsWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getCertificateWithHttpOperationResponse(string, string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCertificateWithHttpOperationResponse(vaultBaseUrl: string,
        certificateName: string, certificateVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificateVersion
          type: string
          description: |
            The version of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedCertificate(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedCertificateBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedCertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedCertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedCertificateBundle} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedCertificate(string, string, Object,
      ServiceCallback<DeletedCertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateBundle|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedCertificate(string, string,
      ServiceCallback<DeletedCertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateBundle|legacy" />&gt;
          description: ''
  - name: getDeletedCertificates(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificates|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDeletedCertificates(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedCertificateListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedCertificateListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedCertificateListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedCertificates(string, Object,
      ServiceCallback<DeletedCertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificates(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedCertificates(string,
      ServiceCallback<DeletedCertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificates(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;
          description: ''
  - name: getDeletedCertificatesNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificatesNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedCertificateListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedCertificateListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedCertificateListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedCertificatesNext(string, Object,
      ServiceCallback<DeletedCertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificatesNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedCertificatesNext(string,
      ServiceCallback<DeletedCertificateListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificatesNext(nextPageLink: string, callback:
        ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;
          description: ''
  - name: getDeletedCertificatesNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getDeletedCertificatesNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedCertificatesWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificatesWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedCertificateListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedCertificateWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedCertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedKey(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKey(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedKeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedKeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedKeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getDeletedKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;
          description: ''
  - name: getDeletedKey(string, string, ServiceCallback<DeletedKeyBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKey(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;
          description: ''
  - name: getDeletedKeys(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedKeys|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDeletedKeys(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedKeyListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedKeyListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedKeyListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedKeyListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getDeletedKeys(string, Object, ServiceCallback<DeletedKeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedKeys_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKeys(vaultBaseUrl: string, options: Object, callback:
        ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyListResult|legacy" />&gt;
          description: ''
  - name: getDeletedKeys(string, ServiceCallback<DeletedKeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedKeys_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKeys(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyListResult|legacy" />&gt;
          description: ''
  - name: getDeletedKeysNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDeletedKeysNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedKeyListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedKeyListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedKeyListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedKeyListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getDeletedKeysNext(string, Object, ServiceCallback<DeletedKeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKeysNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyListResult|legacy" />&gt;
          description: ''
  - name: getDeletedKeysNext(string, ServiceCallback<DeletedKeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKeysNext(nextPageLink: string, callback:
        ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedKeyListResult|legacy" />&gt;
          description: ''
  - name: getDeletedKeysNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKeysNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedKeyListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedKeysWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKeysWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedKeyListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedKeyWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedKeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedSasDefinition(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSasDefinitionBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSasDefinitionBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSasDefinitionBundle} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedSasDefinition(string, string, string, Object,
      ServiceCallback<DeletedSasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options: Object,
        callback: ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedSasDefinition(string, string, string,
      ServiceCallback<DeletedSasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, callback:
        ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: getDeletedSasDefinitions(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitions(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSasDefinitionListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSasDefinitionListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSasDefinitionListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedSasDefinitions(string, string, Object,
      ServiceCallback<DeletedSasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitions(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedSasDefinitions(string, string,
      ServiceCallback<DeletedSasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitions(vaultBaseUrl: string,
        storageAccountName: string, callback:
        ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: getDeletedSasDefinitionsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitionsNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSasDefinitionListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSasDefinitionListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSasDefinitionListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedSasDefinitionsNext(string, Object,
      ServiceCallback<DeletedSasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitionsNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedSasDefinitionsNext(string,
      ServiceCallback<DeletedSasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitionsNext(nextPageLink: string, callback:
        ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: getDeletedSasDefinitionsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getDeletedSasDefinitionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedSasDefinitionsWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitionsWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: >-
      getDeletedSasDefinitionWithHttpOperationResponse(string, string, string,
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSasDefinitionWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSasDefinitionBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedSecret(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedSecretBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSecretBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSecretBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSecretBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedSecret(string, string, Object,
      ServiceCallback<DeletedSecretBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecret(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretBundle|legacy" />&gt;
          description: ''
  - name: getDeletedSecret(string, string, ServiceCallback<DeletedSecretBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretBundle|legacy" />&gt;
          description: ''
  - name: getDeletedSecrets(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecrets|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDeletedSecrets(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedSecretListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSecretListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSecretListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSecretListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedSecrets(string, Object,
      ServiceCallback<DeletedSecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecrets(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretListResult|legacy" />&gt;
          description: ''
  - name: getDeletedSecrets(string, ServiceCallback<DeletedSecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecrets(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretListResult|legacy" />&gt;
          description: ''
  - name: getDeletedSecretsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDeletedSecretsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedSecretListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedSecretListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedSecretListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedSecretListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedSecretsNext(string, Object,
      ServiceCallback<DeletedSecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecretsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretListResult|legacy" />&gt;
          description: ''
  - name: getDeletedSecretsNext(string, ServiceCallback<DeletedSecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecretsNext(nextPageLink: string, callback:
        ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedSecretListResult|legacy" />&gt;
          description: ''
  - name: getDeletedSecretsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecretsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSecretListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedSecretsWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecretsWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSecretListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedSecretWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedSecretBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedStorageAccount(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedStorageBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedStorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedStorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedStorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedStorageAccount(string, string, Object,
      ServiceCallback<DeletedStorageBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageBundle|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedStorageAccount(string, string,
      ServiceCallback<DeletedStorageBundle>)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, callback:
        ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageBundle|legacy" />&gt;
          description: ''
  - name: getDeletedStorageAccounts(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccounts(vaultBaseUrl: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedStorageListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedStorageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedStorageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedStorageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedStorageAccounts(string, Object,
      ServiceCallback<DeletedStorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccounts(vaultBaseUrl: string, options:
        Object, callback: ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageListResult|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedStorageAccounts(string,
      ServiceCallback<DeletedStorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccounts(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageListResult|legacy" />&gt;
          description: ''
  - name: getDeletedStorageAccountsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccountsNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.DeletedStorageListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {DeletedStorageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {DeletedStorageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedStorageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getDeletedStorageAccountsNext(string, Object,
      ServiceCallback<DeletedStorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccountsNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageListResult|legacy" />&gt;
          description: ''
  - name: >-
      getDeletedStorageAccountsNext(string,
      ServiceCallback<DeletedStorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccountsNext(nextPageLink: string, callback:
        ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.DeletedStorageListResult|legacy" />&gt;
          description: ''
  - name: getDeletedStorageAccountsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getDeletedStorageAccountsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedStorageListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedStorageAccountsWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedStorageAccountsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        getDeletedStorageAccountsWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedStorageListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getDeletedStorageAccountWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getDeletedStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.DeletedStorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getKey(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key to get.
        - id: keyVersion
          type: string
          description: |
            Adding the version parameter retrieves a specific
            version of a key.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getKey(string, string, string, Object, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.getKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: getKey(string, string, string, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.getKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: getKeys(string, Object)
    uid: azure-keyvault.KeyVaultClient.getKeys|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getKeys(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getKeys(string, Object, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeys_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeys(vaultBaseUrl: string, options: Object, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeys(string, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeys_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeys(vaultBaseUrl: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeysNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getKeysNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getKeysNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getKeysNext(string, Object, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeysNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeysNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeysNext(string, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeysNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeysNext(nextPageLink: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeysNextWithHttpOperationResponse(string, Object)
    uid: azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeysNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getKeysWithHttpOperationResponse(string, Object)
    uid: azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeysWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getKeyVersions(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getKeyVersions|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyVersions(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getKeyVersions(string, string, Object, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeyVersions_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyVersions(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeyVersions(string, string, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeyVersions_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyVersions(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeyVersionsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getKeyVersionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getKeyVersionsNext(string, Object, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyVersionsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeyVersionsNext(string, ServiceCallback<KeyListResult>)
    uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyVersionsNext(nextPageLink: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyListResult|legacy"
            />&gt;
          description: ''
  - name: getKeyVersionsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyVersionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getKeyVersionsWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyVersionsWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getKeyWithHttpOperationResponse(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key to get.
        - id: keyVersion
          type: string
          description: |
            Adding the version parameter retrieves a specific
            version of a key.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      RequestOptions)
    uid: azure-keyvault.KeyVaultClient.getLongRunningOperationResult_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, options?: RequestOptions)
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: options
          type: RequestOptions
          description: ''
      return:
        type: Promise&lt;TResult&gt;
        description: ''
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      RequestOptions, ServiceCallback<TResult>)
    uid: azure-keyvault.KeyVaultClient.getLongRunningOperationResult|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, options: RequestOptions, callback:
        ServiceCallback<TResult>)
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: options
          type: RequestOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: >-
      getLongRunningOperationResult<TResult>(HttpOperationResponse<TResult>,
      ServiceCallback<TResult>)
    uid: azure-keyvault.KeyVaultClient.getLongRunningOperationResult_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningOperationResult<TResult>(resultOfInitialRequest:
        HttpOperationResponse<TResult>, callback: ServiceCallback<TResult>)
      parameters:
        - id: resultOfInitialRequest
          type: HttpOperationResponse&lt;TResult&gt;
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: getPackageJsonInfo(string)
    uid: azure-keyvault.KeyVaultClient.getPackageJsonInfo|legacy
    package: azure-keyvault|legacy
    summary: >-
      Attempts to find package.json for the given azure nodejs package.

      If found, returns the name and version of the package by reading the
      package.json

      If package.json is not found, returns a default value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type: string
          description: pass the directory of the specific azure management client.
      return:
        type: Object
        description: packageJsonInfo - "name" and "version" of the desired package.
  - name: getSasDefinition(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getSasDefinition|legacy
    package: azure-keyvault|legacy
    summary: |-
      Gets information about a SAS definition for the specified storage account.
      This operation requires the storage/getsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.SasDefinitionBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SasDefinitionBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SasDefinitionBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SasDefinitionBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getSasDefinition(string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.getSasDefinition_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options: Object, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      getSasDefinition(string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.getSasDefinition_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: getSasDefinitions(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getSasDefinitions|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitions(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.SasDefinitionListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SasDefinitionListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SasDefinitionListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SasDefinitionListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getSasDefinitions(string, string, Object,
      ServiceCallback<SasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getSasDefinitions_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitions(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback:
        ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: >-
      getSasDefinitions(string, string,
      ServiceCallback<SasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getSasDefinitions_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitions(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: getSasDefinitionsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSasDefinitionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.SasDefinitionListResult|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SasDefinitionListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SasDefinitionListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SasDefinitionListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getSasDefinitionsNext(string, Object,
      ServiceCallback<SasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitionsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: getSasDefinitionsNext(string, ServiceCallback<SasDefinitionListResult>)
    uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitionsNext(nextPageLink: string, callback:
        ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionListResult|legacy" />&gt;
          description: ''
  - name: getSasDefinitionsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SasDefinitionListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getSasDefinitionsWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitionsWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SasDefinitionListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getSasDefinitionWithHttpOperationResponse(string, string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      Gets information about a SAS definition for the specified storage account.
      This operation requires the storage/getsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getSecret(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: secretVersion
          type: string
          description: |
            The version of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getSecret(string, string, string, Object, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.getSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options: Object, callback:
        ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: secretVersion
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: getSecret(string, string, string, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.getSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: secretVersion
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: getSecrets(string, Object)
    uid: azure-keyvault.KeyVaultClient.getSecrets|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSecrets(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getSecrets(string, Object, ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecrets_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecrets(vaultBaseUrl: string, options: Object, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecrets(string, ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecrets_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecrets(vaultBaseUrl: string, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecretsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getSecretsNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSecretsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getSecretsNext(string, Object, ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecretsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretsNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecretsNext(string, ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecretsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretsNext(nextPageLink: string, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecretsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretsNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getSecretsWithHttpOperationResponse(string, Object)
    uid: azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretsWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getSecretVersions(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getSecretVersions|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretVersions(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      getSecretVersions(string, string, Object,
      ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecretVersions_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretVersions(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecretVersions(string, string, ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecretVersions_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretVersions(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecretVersionsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSecretVersionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getSecretVersionsNext(string, Object, ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretVersionsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecretVersionsNext(string, ServiceCallback<SecretListResult>)
    uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretVersionsNext(nextPageLink: string, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SecretListResult|legacy" />&gt;
          description: ''
  - name: getSecretVersionsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretVersionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getSecretVersionsWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretVersionsWithHttpOperationResponse(vaultBaseUrl:
        string, secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getSecretWithHttpOperationResponse(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: secretVersion
          type: string
          description: |
            The version of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getStorageAccount(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.getStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: >-
      Gets information about a specified storage account. This operation
      requires

      the storage/get permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.getStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: getStorageAccount(string, string, ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.getStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: getStorageAccounts(string, Object)
    uid: azure-keyvault.KeyVaultClient.getStorageAccounts|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getStorageAccounts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getStorageAccounts(string, Object, ServiceCallback<StorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getStorageAccounts_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccounts(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<StorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.StorageListResult|legacy" />&gt;
          description: ''
  - name: getStorageAccounts(string, ServiceCallback<StorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getStorageAccounts_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccounts(vaultBaseUrl: string, callback:
        ServiceCallback<StorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.StorageListResult|legacy" />&gt;
          description: ''
  - name: getStorageAccountsNext(string, Object)
    uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getStorageAccountsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageListResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: getStorageAccountsNext(string, Object, ServiceCallback<StorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccountsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<StorageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.StorageListResult|legacy" />&gt;
          description: ''
  - name: getStorageAccountsNext(string, ServiceCallback<StorageListResult>)
    uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccountsNext(nextPageLink: string, callback:
        ServiceCallback<StorageListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.StorageListResult|legacy" />&gt;
          description: ''
  - name: getStorageAccountsNextWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccountsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type: string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getStorageAccountsWithHttpOperationResponse(string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccountsWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageListResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: getStorageAccountWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: >-
      Gets information about a specified storage account. This operation
      requires

      the storage/get permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: importCertificate(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.importCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importCertificate(vaultBaseUrl: string, certificateName:
        string, base64EncodedCertificate: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: base64EncodedCertificate
          type: string
          description: >
            Base64 encoded representation of

            the certificate object to import. This certificate needs to contain
            the

            private key.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificateBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      importCertificate(string, string, string, Object,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.importCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importCertificate(vaultBaseUrl: string, certificateName:
        string, base64EncodedCertificate: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: base64EncodedCertificate
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: >-
      importCertificate(string, string, string,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.importCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importCertificate(vaultBaseUrl: string, certificateName:
        string, base64EncodedCertificate: string, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: base64EncodedCertificate
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: importCertificateWithHttpOperationResponse(string, string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, base64EncodedCertificate: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: base64EncodedCertificate
          type: string
          description: >
            Base64 encoded representation of

            the certificate object to import. This certificate needs to contain
            the

            private key.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: importKey(string, string, JsonWebKey, Object)
    uid: azure-keyvault.KeyVaultClient.importKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importKey(vaultBaseUrl: string, keyName: string, key:
        JsonWebKey, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            Name for the imported key.
        - id: key
          type: <xref uid="azure-keyvault.JsonWebKey|legacy" />
          description: |
            The Json web key
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: importKey(string, string, JsonWebKey, Object, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.importKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importKey(vaultBaseUrl: string, keyName: string, key:
        JsonWebKey, options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: key
          type: <xref uid="azure-keyvault.JsonWebKey|legacy" />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: importKey(string, string, JsonWebKey, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.importKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importKey(vaultBaseUrl: string, keyName: string, key:
        JsonWebKey, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: key
          type: <xref uid="azure-keyvault.JsonWebKey|legacy" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: importKeyWithHttpOperationResponse(string, string, JsonWebKey, Object)
    uid: azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function importKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, key: JsonWebKey, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            Name for the imported key.
        - id: key
          type: <xref uid="azure-keyvault.JsonWebKey|legacy" />
          description: |
            The Json web key
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: mergeCertificate(string, string, Buffer[], Object)
    uid: azure-keyvault.KeyVaultClient.mergeCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function mergeCertificate(vaultBaseUrl: string, certificateName: string,
        x509Certificates: Buffer[], options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: x509Certificates
          type: Buffer[]
          description: |
            The certificate or the certificate chain to
            merge.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificateBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      mergeCertificate(string, string, Buffer[], Object,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.mergeCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function mergeCertificate(vaultBaseUrl: string, certificateName: string,
        x509Certificates: Buffer[], options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: x509Certificates
          type: Buffer[]
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: >-
      mergeCertificate(string, string, Buffer[],
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.mergeCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function mergeCertificate(vaultBaseUrl: string, certificateName: string,
        x509Certificates: Buffer[], callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: x509Certificates
          type: Buffer[]
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: >-
      mergeCertificateWithHttpOperationResponse(string, string, Buffer[],
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function mergeCertificateWithHttpOperationResponse(vaultBaseUrl: string,
        certificateName: string, x509Certificates: Buffer[], options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: x509Certificates
          type: Buffer[]
          description: |
            The certificate or the certificate chain to
            merge.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: purgeDeletedCertificate(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: purgeDeletedCertificate(string, string, Object, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedCertificate(string, string, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedCertificateWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
        description: A promise is returned
  - name: purgeDeletedKey(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedKey(vaultBaseUrl: string, keyName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: purgeDeletedKey(string, string, Object, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedKey(string, string, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedKey(vaultBaseUrl: string, keyName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedKeyWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
        description: A promise is returned
  - name: purgeDeletedSecret(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: purgeDeletedSecret(string, string, Object, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedSecret(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedSecret(string, string, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedSecretWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedSecretWithHttpOperationResponse(vaultBaseUrl:
        string, secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
        description: A promise is returned
  - name: purgeDeletedStorageAccount(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: purgeDeletedStorageAccount(string, string, Object, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: purgeDeletedStorageAccount(string, string, ServiceCallback<void>)
    uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function purgeDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: ''
  - name: >-
      purgeDeletedStorageAccountWithHttpOperationResponse(string, string,
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.purgeDeletedStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        purgeDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;void&gt;&gt;
        description: A promise is returned
  - name: recoverDeletedCertificate(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedCertificate(vaultBaseUrl: string,
        certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the deleted certificate
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificateBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      recoverDeletedCertificate(string, string, Object,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedCertificate(vaultBaseUrl: string,
        certificateName: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: >-
      recoverDeletedCertificate(string, string,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedCertificate(vaultBaseUrl: string,
        certificateName: string, callback: ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: recoverDeletedCertificateWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        recoverDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string,
        certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the deleted certificate
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: recoverDeletedKey(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedKey(vaultBaseUrl: string, keyName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the deleted key.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: recoverDeletedKey(string, string, Object, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedKey(vaultBaseUrl: string, keyName: string,
        options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: recoverDeletedKey(string, string, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedKey(vaultBaseUrl: string, keyName: string,
        callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: recoverDeletedKeyWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedKeyWithHttpOperationResponse(vaultBaseUrl:
        string, keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the deleted key.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: recoverDeletedSasDefinition(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.SasDefinitionBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SasDefinitionBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SasDefinitionBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SasDefinitionBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      recoverDeletedSasDefinition(string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options: Object,
        callback: ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      recoverDeletedSasDefinition(string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      recoverDeletedSasDefinitionWithHttpOperationResponse(string, string,
      string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedSasDefinitionWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        recoverDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: recoverDeletedSecret(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the deleted secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      recoverDeletedSecret(string, string, Object,
      ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedSecret(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: recoverDeletedSecret(string, string, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: recoverDeletedSecretWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedSecretWithHttpOperationResponse(vaultBaseUrl:
        string, secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the deleted secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: recoverDeletedStorageAccount(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      recoverDeletedStorageAccount(string, string, Object,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      recoverDeletedStorageAccount(string, string,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recoverDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      recoverDeletedStorageAccountWithHttpOperationResponse(string, string,
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        recoverDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: regenerateStorageAccountKey(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey|legacy
    package: azure-keyvault|legacy
    summary: |-
      Regenerates the specified key value for the given storage account. This
      operation requires the storage/regeneratekey permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateStorageAccountKey(vaultBaseUrl: string,
        storageAccountName: string, keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: keyName
          type: string
          description: |
            The storage account key name.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      regenerateStorageAccountKey(string, string, string, Object,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateStorageAccountKey(vaultBaseUrl: string,
        storageAccountName: string, keyName: string, options: Object, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      regenerateStorageAccountKey(string, string, string,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function regenerateStorageAccountKey(vaultBaseUrl: string,
        storageAccountName: string, keyName: string, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      regenerateStorageAccountKeyWithHttpOperationResponse(string, string,
      string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      Regenerates the specified key value for the given storage account. This
      operation requires the storage/regeneratekey permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        regenerateStorageAccountKeyWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: keyName
          type: string
          description: |
            The storage account key name.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: restoreCertificate(string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.restoreCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreCertificate(vaultBaseUrl: string,
        certificateBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a
            certificate bundle.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificateBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      restoreCertificate(string, Buffer, Object,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreCertificate(vaultBaseUrl: string,
        certificateBundleBackup: Buffer, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateBundleBackup
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: restoreCertificate(string, Buffer, ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreCertificate(vaultBaseUrl: string,
        certificateBundleBackup: Buffer, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateBundleBackup
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: restoreCertificateWithHttpOperationResponse(string, Buffer, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.restoreCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a
            certificate bundle.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: restoreKey(string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.restoreKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a key
            bundle.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: restoreKey(string, Buffer, Object, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer,
        options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyBundleBackup
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: restoreKey(string, Buffer, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer,
        callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyBundleBackup
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: restoreKeyWithHttpOperationResponse(string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a key
            bundle.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: restoreSecret(string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.restoreSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a secret
            bundle.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: restoreSecret(string, Buffer, Object, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer,
        options: Object, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretBundleBackup
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: restoreSecret(string, Buffer, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer,
        callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretBundleBackup
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: restoreSecretWithHttpOperationResponse(string, Buffer, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a secret
            bundle.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: restoreStorageAccount(string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.restoreStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreStorageAccount(vaultBaseUrl: string,
        storageBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a
            storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      restoreStorageAccount(string, Buffer, Object,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreStorageAccount(vaultBaseUrl: string,
        storageBundleBackup: Buffer, options: Object, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageBundleBackup
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: restoreStorageAccount(string, Buffer, ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreStorageAccount(vaultBaseUrl: string,
        storageBundleBackup: Buffer, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageBundleBackup
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: restoreStorageAccountWithHttpOperationResponse(string, Buffer, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.restoreStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function restoreStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageBundleBackup
          type: Buffer
          description: |
            The backup blob associated with a
            storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: >-
      sendLongRunningRequest<TResult>(LongRunningUrlBasedRequestPrepareOptions |
      LongRunningPathTemplateBasedRequestPrepareOptions)
    uid: azure-keyvault.KeyVaultClient.sendLongRunningRequest_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions)
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type: Promise&lt;TResult&gt;
        description: ''
  - name: >-
      sendLongRunningRequest<TResult>(LongRunningUrlBasedRequestPrepareOptions |
      LongRunningPathTemplateBasedRequestPrepareOptions,
      ServiceCallback<TResult>)
    uid: azure-keyvault.KeyVaultClient.sendLongRunningRequest|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions, callback:
        ServiceCallback<TResult>)
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: >-
      sendLongRunningRequestWithHttpOperationResponse<TResult>(LongRunningUrlBasedRequestPrepareOptions
      | LongRunningPathTemplateBasedRequestPrepareOptions)
    uid: >-
      azure-keyvault.KeyVaultClient.sendLongRunningRequestWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        sendLongRunningRequestWithHttpOperationResponse<TResult>(options:
        LongRunningUrlBasedRequestPrepareOptions |
        LongRunningPathTemplateBasedRequestPrepareOptions)
      parameters:
        - id: options
          type: >-
            LongRunningUrlBasedRequestPrepareOptions |
            LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;TResult&gt;&gt;
        description: ''
  - name: >-
      sendRequest<TResult>(PathTemplateBasedRequestPrepareOptions |
      UrlBasedRequestPrepareOptions)
    uid: azure-keyvault.KeyVaultClient.sendRequest_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
      return:
        type: Promise&lt;TResult&gt;
        description: ''
  - name: >-
      sendRequest<TResult>(PathTemplateBasedRequestPrepareOptions |
      UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)
    uid: azure-keyvault.KeyVaultClient.sendRequest|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions,
        callback: ServiceCallback<TResult>)
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type: ServiceCallback&lt;TResult&gt;
          description: ''
  - name: >-
      sendRequestWithHttpOperationResponse<TResult>(PathTemplateBasedRequestPrepareOptions
      | UrlBasedRequestPrepareOptions)
    uid: azure-keyvault.KeyVaultClient.sendRequestWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendRequestWithHttpOperationResponse<TResult>(options:
        PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
      parameters:
        - id: options
          type: >-
            PathTemplateBasedRequestPrepareOptions |
            UrlBasedRequestPrepareOptions
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&lt;TResult&gt;&gt;
        description: ''
  - name: setCertificateContacts(string, Contacts, Object)
    uid: azure-keyvault.KeyVaultClient.setCertificateContacts|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateContacts(vaultBaseUrl: string, contacts:
        Contacts, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: contacts
          type: <xref uid="azure-keyvault.Contacts|legacy" />
          description: |
            The contacts for the key vault certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Contacts} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Contacts} [result]   - The deserialized result object if an error did not occur.
                               See {@link Contacts} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      setCertificateContacts(string, Contacts, Object,
      ServiceCallback<Contacts>)
    uid: azure-keyvault.KeyVaultClient.setCertificateContacts_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateContacts(vaultBaseUrl: string, contacts:
        Contacts, options: Object, callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: contacts
          type: <xref uid="azure-keyvault.Contacts|legacy" />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
          description: ''
  - name: setCertificateContacts(string, Contacts, ServiceCallback<Contacts>)
    uid: azure-keyvault.KeyVaultClient.setCertificateContacts_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateContacts(vaultBaseUrl: string, contacts:
        Contacts, callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: contacts
          type: <xref uid="azure-keyvault.Contacts|legacy" />
          description: ''
        - id: callback
          type: ServiceCallback&lt;<xref uid="azure-keyvault.Contacts|legacy" />&gt;
          description: ''
  - name: setCertificateContactsWithHttpOperationResponse(string, Contacts, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateContactsWithHttpOperationResponse(vaultBaseUrl:
        string, contacts: Contacts, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: contacts
          type: <xref uid="azure-keyvault.Contacts|legacy" />
          description: |
            The contacts for the key vault certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.Contacts|legacy" />&gt;&gt;
        description: A promise is returned
  - name: setCertificateIssuer(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.setCertificateIssuer|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        provider: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: provider
          type: string
          description: |
            The issuer provider.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.IssuerBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {IssuerBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {IssuerBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link IssuerBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      setCertificateIssuer(string, string, string, Object,
      ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        provider: string, options: Object, callback:
        ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: provider
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      setCertificateIssuer(string, string, string,
      ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        provider: string, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: provider
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      setCertificateIssuerWithHttpOperationResponse(string, string, string,
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, provider: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: provider
          type: string
          description: |
            The issuer provider.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.IssuerBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: setSasDefinition(string, string, string, string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.setSasDefinition|legacy
    package: azure-keyvault|legacy
    summary: |-
      Creates or updates a new SAS definition for the specified storage account.
      This operation requires the storage/setsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, templateUri: string, sasType: string,
        validityPeriod: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: templateUri
          type: string
          description: >
            The SAS definition token template signed with an

            arbitrary key.  Tokens created according to the SAS definition will
            have the

            same properties as the template.
        - id: sasType
          type: string
          description: |
            The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'
        - id: validityPeriod
          type: string
          description: |
            The validity period of SAS tokens created
            according to the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.SasDefinitionBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SasDefinitionBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SasDefinitionBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SasDefinitionBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      setSasDefinition(string, string, string, string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.setSasDefinition_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, templateUri: string, sasType: string,
        validityPeriod: string, options: Object, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: templateUri
          type: string
          description: ''
        - id: sasType
          type: string
          description: ''
        - id: validityPeriod
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      setSasDefinition(string, string, string, string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.setSasDefinition_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, templateUri: string, sasType: string,
        validityPeriod: string, callback: ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: templateUri
          type: string
          description: ''
        - id: sasType
          type: string
          description: ''
        - id: validityPeriod
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      setSasDefinitionWithHttpOperationResponse(string, string, string, string,
      string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      Creates or updates a new SAS definition for the specified storage account.
      This operation requires the storage/setsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, templateUri:
        string, sasType: string, validityPeriod: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: templateUri
          type: string
          description: >
            The SAS definition token template signed with an

            arbitrary key.  Tokens created according to the SAS definition will
            have the

            same properties as the template.
        - id: sasType
          type: string
          description: |
            The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'
        - id: validityPeriod
          type: string
          description: |
            The validity period of SAS tokens created
            according to the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: setSecret(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.setSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSecret(vaultBaseUrl: string, secretName: string, value:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: value
          type: string
          description: |
            The value of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: setSecret(string, string, string, Object, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.setSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSecret(vaultBaseUrl: string, secretName: string, value:
        string, options: Object, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: value
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: setSecret(string, string, string, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.setSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSecret(vaultBaseUrl: string, secretName: string, value:
        string, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: value
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: setSecretWithHttpOperationResponse(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, value: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: value
          type: string
          description: |
            The value of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: setStorageAccount(string, string, string, string, boolean, Object)
    uid: azure-keyvault.KeyVaultClient.setStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: |-
      Creates or updates a new storage account. This operation requires the
      storage/set permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, resourceId: string, activeKeyName: string, autoRegenerateKey:
        boolean, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: resourceId
          type: string
          description: |
            Storage account resource id.
        - id: activeKeyName
          type: string
          description: |
            Current active storage account key name.
        - id: autoRegenerateKey
          type: boolean
          description: |
            whether keyvault should manage the
            storage account for the user.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      setStorageAccount(string, string, string, string, boolean, Object,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.setStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, resourceId: string, activeKeyName: string, autoRegenerateKey:
        boolean, options: Object, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: resourceId
          type: string
          description: ''
        - id: activeKeyName
          type: string
          description: ''
        - id: autoRegenerateKey
          type: boolean
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      setStorageAccount(string, string, string, string, boolean,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.setStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, resourceId: string, activeKeyName: string, autoRegenerateKey:
        boolean, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: resourceId
          type: string
          description: ''
        - id: activeKeyName
          type: string
          description: ''
        - id: autoRegenerateKey
          type: boolean
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: >-
      setStorageAccountWithHttpOperationResponse(string, string, string, string,
      boolean, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      Creates or updates a new storage account. This operation requires the
      storage/set permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, resourceId: string, activeKeyName:
        string, autoRegenerateKey: boolean, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: resourceId
          type: string
          description: |
            Storage account resource id.
        - id: activeKeyName
          type: string
          description: |
            Current active storage account key name.
        - id: autoRegenerateKey
          type: boolean
          description: |
            whether keyvault should manage the
            storage account for the user.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: sign(string, string, string, string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.sign|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sign(vaultBaseUrl: string, keyName: string, keyVersion: string,
        algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: >
            The signing/verification algorithm identifier. For

            more information on possible algorithm types, see

            JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384',

            'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384',
            'ES512',

            'ES256K'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyOperationResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyOperationResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyOperationResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      sign(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.sign_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sign(vaultBaseUrl: string, keyName: string, keyVersion: string,
        algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      sign(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.sign_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sign(vaultBaseUrl: string, keyName: string, keyVersion: string,
        algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      signWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    uid: azure-keyvault.KeyVaultClient.signWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function signWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: >
            The signing/verification algorithm identifier. For

            more information on possible algorithm types, see

            JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384',

            'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384',
            'ES512',

            'ES256K'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyOperationResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: unwrapKey(string, string, string, string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.unwrapKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyOperationResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyOperationResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyOperationResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      unwrapKey(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.unwrapKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      unwrapKey(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.unwrapKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      unwrapKeyWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    uid: azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function unwrapKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, keyVersion: string, algorithm: string, value: Buffer,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyOperationResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateCertificate(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateCertificate|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificate(vaultBaseUrl: string, certificateName:
        string, certificateVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in the given key
            vault.
        - id: certificateVersion
          type: string
          description: |
            The version of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificateBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateCertificate(string, string, string, Object,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.updateCertificate_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificate(vaultBaseUrl: string, certificateName:
        string, certificateVersion: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: certificateVersion
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: >-
      updateCertificate(string, string, string,
      ServiceCallback<CertificateBundle>)
    uid: azure-keyvault.KeyVaultClient.updateCertificate_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificate(vaultBaseUrl: string, certificateName:
        string, certificateVersion: string, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: certificateVersion
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateBundle|legacy" />&gt;
          description: ''
  - name: updateCertificateIssuer(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.IssuerBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {IssuerBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {IssuerBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link IssuerBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateCertificateIssuer(string, string, Object,
      ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options: Object, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: updateCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)
    uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: issuerName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.IssuerBundle|legacy"
            />&gt;
          description: ''
  - name: updateCertificateIssuerWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type: string
          description: |
            The name of the issuer.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.IssuerBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateCertificateOperation(string, string, boolean, Object)
    uid: azure-keyvault.KeyVaultClient.updateCertificateOperation|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateOperation(vaultBaseUrl: string,
        certificateName: string, cancellationRequested: boolean, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: cancellationRequested
          type: boolean
          description: |
            Indicates if cancellation was
            requested on the certificate operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.CertificateOperation|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificateOperation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificateOperation} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificateOperation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateCertificateOperation(string, string, boolean, Object,
      ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateOperation(vaultBaseUrl: string,
        certificateName: string, cancellationRequested: boolean, options:
        Object, callback: ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: cancellationRequested
          type: boolean
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: >-
      updateCertificateOperation(string, string, boolean,
      ServiceCallback<CertificateOperation>)
    uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateOperation(vaultBaseUrl: string,
        certificateName: string, cancellationRequested: boolean, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: cancellationRequested
          type: boolean
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificateOperation|legacy" />&gt;
          description: ''
  - name: >-
      updateCertificateOperationWithHttpOperationResponse(string, string,
      boolean, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, cancellationRequested: boolean,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate.
        - id: cancellationRequested
          type: boolean
          description: |
            Indicates if cancellation was
            requested on the certificate operation.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateOperation|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateCertificatePolicy(string, string, CertificatePolicy, Object)
    uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, certificatePolicy: CertificatePolicy, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificatePolicy
          type: <xref uid="azure-keyvault.CertificatePolicy|legacy" />
          description: |
            The policy for the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.CertificatePolicy|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {CertificatePolicy} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {CertificatePolicy} [result]   - The deserialized result object if an error did not occur.
                               See {@link CertificatePolicy} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateCertificatePolicy(string, string, CertificatePolicy, Object,
      ServiceCallback<CertificatePolicy>)
    uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, certificatePolicy: CertificatePolicy, options: Object, callback:
        ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: certificatePolicy
          type: <xref uid="azure-keyvault.CertificatePolicy|legacy" />
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificatePolicy|legacy" />&gt;
          description: ''
  - name: >-
      updateCertificatePolicy(string, string, CertificatePolicy,
      ServiceCallback<CertificatePolicy>)
    uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, certificatePolicy: CertificatePolicy, callback:
        ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: certificateName
          type: string
          description: ''
        - id: certificatePolicy
          type: <xref uid="azure-keyvault.CertificatePolicy|legacy" />
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.CertificatePolicy|legacy" />&gt;
          description: ''
  - name: >-
      updateCertificatePolicyWithHttpOperationResponse(string, string,
      CertificatePolicy, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, certificatePolicy: CertificatePolicy,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificatePolicy
          type: <xref uid="azure-keyvault.CertificatePolicy|legacy" />
          description: |
            The policy for the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificatePolicy|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateCertificateWithHttpOperationResponse(string, string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, certificateVersion: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type: string
          description: |
            The name of the certificate in the given key
            vault.
        - id: certificateVersion
          type: string
          description: |
            The version of the certificate.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.CertificateBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateKey(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of key to update.
        - id: keyVersion
          type: string
          description: |
            The version of the key to update.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: updateKey(string, string, string, Object, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.updateKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: updateKey(string, string, string, ServiceCallback<KeyBundle>)
    uid: azure-keyvault.KeyVaultClient.updateKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyBundle|legacy"
            />&gt;
          description: ''
  - name: updateKeyWithHttpOperationResponse(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, keyVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of key to update.
        - id: keyVersion
          type: string
          description: |
            The version of the key to update.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateSasDefinition(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateSasDefinition|legacy
    package: azure-keyvault|legacy
    summary: |-
      Updates the specified attributes associated with the given SAS definition.
      This operation requires the storage/setsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="azure-keyvault.SasDefinitionBundle|legacy"
          />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SasDefinitionBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SasDefinitionBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SasDefinitionBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateSasDefinition(string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.updateSasDefinition_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options: Object, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      updateSasDefinition(string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    uid: azure-keyvault.KeyVaultClient.updateSasDefinition_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: sasDefinitionName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;
          description: ''
  - name: >-
      updateSasDefinitionWithHttpOperationResponse(string, string, string,
      Object)
    uid: >-
      azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: |-
      Updates the specified attributes associated with the given SAS definition.
      This operation requires the storage/setsas permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type: string
          description: |
            The name of the SAS definition.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SasDefinitionBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateSecret(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateSecret|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: secretVersion
          type: string
          description: |
            The version of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.SecretBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecretBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecretBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecretBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateSecret(string, string, string, Object,
      ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.updateSecret_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options: Object, callback:
        ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: secretVersion
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: updateSecret(string, string, string, ServiceCallback<SecretBundle>)
    uid: azure-keyvault.KeyVaultClient.updateSecret_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: secretName
          type: string
          description: ''
        - id: secretVersion
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.SecretBundle|legacy"
            />&gt;
          description: ''
  - name: updateSecretWithHttpOperationResponse(string, string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type: string
          description: |
            The name of the secret.
        - id: secretVersion
          type: string
          description: |
            The version of the secret.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.SecretBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: updateStorageAccount(string, string, Object)
    uid: azure-keyvault.KeyVaultClient.updateStorageAccount|legacy
    package: azure-keyvault|legacy
    summary: >-
      Updates the specified attributes associated with the given storage
      account.

      This operation requires the storage/set/update permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.StorageBundle|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {StorageBundle} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {StorageBundle} [result]   - The deserialized result object if an error did not occur.
                               See {@link StorageBundle} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      updateStorageAccount(string, string, Object,
      ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.updateStorageAccount_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: updateStorageAccount(string, string, ServiceCallback<StorageBundle>)
    uid: azure-keyvault.KeyVaultClient.updateStorageAccount_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: storageAccountName
          type: string
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.StorageBundle|legacy"
            />&gt;
          description: ''
  - name: updateStorageAccountWithHttpOperationResponse(string, string, Object)
    uid: >-
      azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: >-
      Updates the specified attributes associated with the given storage
      account.

      This operation requires the storage/set/update permission.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type: string
          description: |
            The name of the storage account.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.StorageBundle|legacy" />&gt;&gt;
        description: A promise is returned
  - name: verify(string, string, string, string, Buffer, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.verify|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verify(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, digest: Buffer, signature: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: >
            The signing/verification algorithm. For more

            information on possible algorithm types, see
            JsonWebKeySignatureAlgorithm.

            Possible values include: 'PS256', 'PS384', 'PS512', 'RS256',
            'RS384',

            'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'
        - id: digest
          type: Buffer
          description: |
            The digest used for signing.
        - id: signature
          type: Buffer
          description: |
            The signature to be verified.
        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyVerifyResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyVerifyResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyVerifyResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyVerifyResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      verify(string, string, string, string, Buffer, Buffer, Object,
      ServiceCallback<KeyVerifyResult>)
    uid: azure-keyvault.KeyVaultClient.verify_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verify(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, digest: Buffer, signature: Buffer, options:
        Object, callback: ServiceCallback<KeyVerifyResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: digest
          type: Buffer
          description: ''
        - id: signature
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyVerifyResult|legacy"
            />&gt;
          description: ''
  - name: >-
      verify(string, string, string, string, Buffer, Buffer,
      ServiceCallback<KeyVerifyResult>)
    uid: azure-keyvault.KeyVaultClient.verify_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verify(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, digest: Buffer, signature: Buffer, callback:
        ServiceCallback<KeyVerifyResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: digest
          type: Buffer
          description: ''
        - id: signature
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="azure-keyvault.KeyVerifyResult|legacy"
            />&gt;
          description: ''
  - name: >-
      verifyWithHttpOperationResponse(string, string, string, string, Buffer,
      Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function verifyWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, digest: Buffer,
        signature: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: >
            The signing/verification algorithm. For more

            information on possible algorithm types, see
            JsonWebKeySignatureAlgorithm.

            Possible values include: 'PS256', 'PS384', 'PS512', 'RS256',
            'RS384',

            'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'
        - id: digest
          type: Buffer
          description: |
            The digest used for signing.
        - id: signature
          type: Buffer
          description: |
            The signature to be verified.
        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyVerifyResult|legacy" />&gt;&gt;
        description: A promise is returned
  - name: wrapKey(string, string, string, string, Buffer, Object)
    uid: azure-keyvault.KeyVaultClient.wrapKey|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: Promise&lt;<xref uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {KeyOperationResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {KeyOperationResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link KeyOperationResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
  - name: >-
      wrapKey(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.wrapKey_2|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: options
          type: Object
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      wrapKey(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    uid: azure-keyvault.KeyVaultClient.wrapKey_1|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: ''
        - id: keyName
          type: string
          description: ''
        - id: keyVersion
          type: string
          description: ''
        - id: algorithm
          type: string
          description: ''
        - id: value
          type: Buffer
          description: ''
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="azure-keyvault.KeyOperationResult|legacy" />&gt;
          description: ''
  - name: >-
      wrapKeyWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    uid: azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse|legacy
    package: azure-keyvault|legacy
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function wrapKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type: string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type: string
          description: |
            The name of the key.
        - id: keyVersion
          type: string
          description: |
            The version of the key.
        - id: algorithm
          type: string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type: Buffer
          description: |+

        - id: options
          type: Object
          description: ''
      return:
        type: >-
          Promise&lt;HttpOperationResponse&lt;<xref
          uid="azure-keyvault.KeyOperationResult|legacy" />&gt;&gt;
        description: A promise is returned
extends: AzureServiceClient
