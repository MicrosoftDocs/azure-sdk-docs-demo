### YamlMime:TSType
name: EventGridPublisherClient
uid: '@azure/eventgrid.EventGridPublisherClient'
package: '@azure/eventgrid'
summary: Client class for publishing events to the Event Grid Service.
fullName: EventGridPublisherClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      EventGridPublisherClient(string, KeyCredential | SignatureCredential,
      EventGridPublisherClientOptions)
    uid: '@azure/eventgrid.EventGridPublisherClient.constructor'
    package: '@azure/eventgrid'
    summary: >
      Creates an instance of EventGridPublisherClient.

      Example usage:

      ```ts

      import { EventGridPublisherClient, AzureKeyCredential } from
      "@azure/eventgrid";


      const client = new EventGridPublisherClient(
         "<service endpoint>",
         new AzureKeyCredential("<api key>")
      );

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new EventGridPublisherClient(endpointUrl: string, credential:
        KeyCredential | SignatureCredential, options?:
        EventGridPublisherClientOptions)
      parameters:
        - id: endpointUrl
          type: string
          description: >-
            The URL to the EventGrid endpoint, e.g.
            https://eg-topic.westus2-1.eventgrid.azure.net/api/events
        - id: credential
          type: KeyCredential | <xref uid="@azure/eventgrid.SignatureCredential" />
          description: Used to authenticate requests to the service.
        - id: options
          type: <xref uid="@azure/eventgrid.EventGridPublisherClientOptions" />
          description: |
            Used to configure the Event Grid Client
properties:
  - name: apiVersion
    uid: '@azure/eventgrid.EventGridPublisherClient.apiVersion'
    package: '@azure/eventgrid'
    summary: The version of the Even Grid service.
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        type: string
        description: ''
  - name: endpointUrl
    uid: '@azure/eventgrid.EventGridPublisherClient.endpointUrl'
    package: '@azure/eventgrid'
    summary: The URL to the Event Grid endpoint.
    fullName: endpointUrl
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpointUrl: string'
      return:
        type: string
        description: ''
methods:
  - name: 'sendCloudEvents(SendCloudEventInput<any>[], SendCloudEventsOptions)'
    uid: '@azure/eventgrid.EventGridPublisherClient.sendCloudEvents'
    package: '@azure/eventgrid'
    summary: >-
      Publishes events in the Cloud Events 1.0 schema. The topic must be
      configured to expect events in the Cloud Events 1.0 schema.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendCloudEvents(events: SendCloudEventInput<any>[], options?:
        SendCloudEventsOptions)
      parameters:
        - id: events
          type: '<xref uid="@azure/eventgrid.SendCloudEventInput" />&lt;any&gt;[]'
          description: ''
        - id: options
          type: <xref uid="@azure/eventgrid.SendCloudEventsOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/eventgrid.SendEventsResponse" />&gt;
        description: ''
  - name: >-
      sendCustomSchemaEvents(Record<string, any>[],
      SendCustomSchemaEventsOptions)
    uid: '@azure/eventgrid.EventGridPublisherClient.sendCustomSchemaEvents'
    package: '@azure/eventgrid'
    summary: >-
      Publishes events written using a custom schema. The topic must be
      configured to expect events in a custom schema.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendCustomSchemaEvents(events: Record<string, any>[], options?:
        SendCustomSchemaEventsOptions)
      parameters:
        - id: events
          type: 'Record&lt;string, any&gt;[]'
          description: ''
        - id: options
          type: <xref uid="@azure/eventgrid.SendCustomSchemaEventsOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/eventgrid.SendEventsResponse" />&gt;
        description: ''
  - name: 'sendEvents(SendEventGridEventInput<any>[], SendEventsOptions)'
    uid: '@azure/eventgrid.EventGridPublisherClient.sendEvents'
    package: '@azure/eventgrid'
    summary: >-
      Publishes events in the Event Grid scheama. The topic must be configured
      to expect events in the Event Grid schema.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendEvents(events: SendEventGridEventInput<any>[], options?:
        SendEventsOptions)
      parameters:
        - id: events
          type: '<xref uid="@azure/eventgrid.SendEventGridEventInput" />&lt;any&gt;[]'
          description: ''
        - id: options
          type: <xref uid="@azure/eventgrid.SendEventsOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/eventgrid.SendEventsResponse" />&gt;
        description: ''
